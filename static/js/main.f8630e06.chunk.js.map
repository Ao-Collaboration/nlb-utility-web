{"version":3,"sources":["context/Web3/Web3Context.tsx","pages/routes.tsx","components/Logo/Logo.styles.tsx","components/Logo/AoLogo.tsx","components/Logo/NLBLogo.tsx","config/colors.tsx","components/Footer/Footer.styles.tsx","components/Footer/Footer.tsx","config/chain.tsx","components/Spinner/Spinner.styles.tsx","components/Spinner/Spinner.tsx","config/jss-vars.tsx","components/Button/Button.styles.tsx","components/Button/Button.tsx","components/Button/ConnectButton.tsx","components/Header/Header.styles.tsx","components/Header/Header.tsx","components/PageWrapper/PageWrapper.styles.tsx","components/PageWrapper/PageWrapper.tsx","utils/doFetch.tsx","components/Balance/Balance.styles.tsx","components/Balance/Balance.tsx","components/Staking/NFTCard.styles.tsx","components/Staking/NFTCard.tsx","components/Staking/Staking.styles.tsx","components/Staking/Staking.tsx","pages/Profile/Profile.styles.tsx","pages/Profile/Profile.tsx","pages/ConnectWallet/ConnectWallet.styles.tsx","pages/ConnectWallet/ConnectWallet.tsx","pages/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Web3Context","createContext","Web3ContextProvider","children","useState","account","setAccount","address","setAddress","web3Provider","setWeb3Provider","Provider","value","HomeRoute","ProfileRoute","createUseStyles","defaultHeight","height","default","width","invert","composes","filter","small","large","largeInverted","AoLogo","className","classes","useStyles","src","process","alt","NLBLogo","black","white","cyan","teal","off_white","styles","footer","background","inner","display","justifyContent","padding","Footer","href","getNlbContractId","chainId","getStakingContractId","validChainIds","transform","spinner","borderTop","borderRight","borderRadius","animation","spinPadding","Spinner","standardFontFamily","weightSemiBold","base","cursor","fontFamily","fontSize","lineHeight","textAlign","outline","button","border","letterSpacing","boxShadow","opacity","pointerEvents","primary","textTransform","fontWeight","color","link","backgroundColor","success","error","info","Button","onClick","disabled","ConnectButton","useContext","isLoading","setIsLoading","getWeb3Modal","a","Web3Modal","network","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","disableInjectedProvider","connect","web3Modal","clearCachedProvider","connection","provider","ethers","providers","Web3Provider","getNetwork","includes","toast","listAccounts","accounts","addr","lookupAddress","name","substring","length","header","flexDirection","alignItems","gap","rightContent","marginLeft","textDecoration","Header","to","minHeight","backgroundSize","backgroundPosition","main","flex","PageWrapper","hasHeader","hasFooter","doFetch","path","method","body","didToast","fetch","JSON","stringify","credentials","headers","Accept","res","ok","msg","status","console","Error","json","section","margin","text","textSpecial","Balance","balance","setBalance","getBalance","useEffect","claimTokens","card","selectedCard","image","maxWidth","caption","NFTCard","nft","selected","sectionContainer","container","flexWrap","heading","subheading","marginBottom","Staking","unstaked","setUnstaked","staked","setStaked","stakingContract","setStakingContract","nlbContract","setNlbContract","isApproved","setIsApproved","txPending","setTxPending","forceRefresh","setForceRefresh","getNLBs","stakingContractId","nlbContractId","signer","getSigner","_stakingContract","Contract","stakingABI","_nlbContract","nlbABI","walletOfOwner","allNLBs","listStakedTokensOfOwner","stakedNLBs","unstakedNLBs","forEach","token_id","push","stakedNLBData","unstakedNLBData","baseURI","basePath","metadataPromises","i","toNumber","Promise","all","metadata","tokenId","replace","isApprovedForAll","updateSelected","nlb","find","h","doApproval","setApprovalForAll","tx","wait","doStake","map","window","alert","stake","doUnstake","unstake","hasStakeSelected","hasUnstakeSelected","page","Profile","ConnectWallet","Router","element","App","theme","position","autoClose","pauseOnFocusLoss","draggable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f8630e06.chunk.js","sourcesContent":["import {\r\n\tcreateContext,\r\n\tDispatch,\r\n\tFC,\r\n\tReactNode,\r\n\tSetStateAction,\r\n\tuseState,\r\n} from 'react'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\n\r\ninterface CtxProps {\r\n\taccount?: string | null\r\n\tsetAccount?: Dispatch<SetStateAction<string | null>>\r\n\taddress?: string | null\r\n\tsetAddress?: Dispatch<SetStateAction<string | null>>\r\n\tweb3Provider?: Web3Provider | null\r\n\tsetWeb3Provider?: Dispatch<SetStateAction<Web3Provider | null>>\r\n}\r\ninterface Props {\r\n\tchildren: ReactNode\r\n}\r\n\r\nexport const Web3Context = createContext<CtxProps>({})\r\nconst Web3ContextProvider: FC<Props> = ({ children }) => {\r\n\tconst [account, setAccount] = useState<string | null>(null)\r\n\tconst [address, setAddress] = useState<string | null>(null)\r\n\tconst [web3Provider, setWeb3Provider] = useState<Web3Provider | null>(null)\r\n\r\n\treturn (\r\n\t\t<Web3Context.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\taccount,\r\n\t\t\t\tsetAccount,\r\n\t\t\t\taddress,\r\n\t\t\t\tsetAddress,\r\n\t\t\t\tweb3Provider,\r\n\t\t\t\tsetWeb3Provider,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Web3Context.Provider>\r\n\t)\r\n}\r\n\r\nexport default Web3ContextProvider\r\n","export interface Route {\r\n\tname: string,\r\n\tpath: string,\r\n\tbasePath?: string,\r\n}\r\n\r\nexport const HomeRoute: Route = {\r\n\tname: 'Home',\r\n\tpath: '/',\r\n}\r\n\r\nexport const ProfileRoute: Route = {\r\n\tname: 'Profile',\r\n\tpath: '/profile'\r\n}\r\n","import { createUseStyles } from 'react-jss'\r\n\r\nexport type ClassNames = 'default' | 'invert' | 'small' | 'large' | 'largeInverted'\r\n\r\nconst styles = {\r\n\tdefaultHeight: {\r\n\t\theight: '3em',\r\n\t},\r\n\tdefault: {\r\n\t\theight: '3em',\r\n\t\twidth: '3em',\r\n\t},\r\n\tinvert: {\r\n\t\tcomposes: '$default',\r\n\t\tfilter: 'invert(1)',\r\n\t},\r\n\tsmall: {\r\n\t\theight: '1em',\r\n\t\twidth: '1em',\r\n\t},\r\n\tlarge: {\r\n\t\theight: '5em',\r\n\t\twidth: '5em',\r\n\t},\r\n\tlargeInverted: {\r\n\t\tcomposes: ['$large', '$invert'],\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import useStyles, { ClassNames } from './Logo.styles'\r\n\r\nconst { PUBLIC_URL } = process.env\r\n\r\ninterface Props {\r\n\tclassName?: ClassNames;\r\n}\r\n\r\nconst AoLogo: React.FC<Props> = ({className}) => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<img\r\n\t\t\tclassName={classes[className || 'default']}\r\n\t\t\tsrc={`${PUBLIC_URL}/img/logo_ao.png`}\r\n\t\t\talt=\"Ao Logo\"\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default AoLogo\r\n","import useStyles, { ClassNames } from './Logo.styles'\r\n\r\nconst { PUBLIC_URL } = process.env\r\n\r\ninterface Props {\r\n\tclassName?: ClassNames;\r\n}\r\n\r\nconst NLBLogo: React.FC<Props> = ({className}) => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<img\r\n\t\t\tclassName={classes[className || 'default']}\r\n\t\t\tsrc={`${PUBLIC_URL}/img/logo_nlb.png`}\r\n\t\t\talt=\"NLB Logo\"\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default NLBLogo\r\n","/**\r\n * Colors\r\n */\r\nexport const black = '#000'\r\nexport const white = '#FFF'\r\nexport const cyan = '#46BEAA'\r\nexport const teal = '#137055'\r\n\r\nexport const off_black = 'rgba(0,0,0,0.25)'\r\nexport const off_white = 'rgba(255,255,255,0.85)'\r\nexport const slight_white = 'rgba(255,255,255,0.15)'\r\n","import { createUseStyles } from 'react-jss'\r\nimport { black } from '../../config/colors'\r\n\r\nconst styles = {\r\n\tfooter: {\r\n\t\tbackground: black,\r\n\t},\r\n\tinner: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '1em',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import AoLogo from '../Logo/AoLogo'\r\nimport NLBLogo from '../Logo/NLBLogo'\r\nimport useStyles from './Footer.styles'\r\n\r\nconst Footer: React.FC = () => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<footer className={classes.footer}>\r\n\t\t\t<div className={classes.inner}>\r\n\t\t\t\t<NLBLogo />\r\n\t\t\t\t<a href='https://block.aocollab.tech'>\r\n\t\t\t\t\t<AoLogo />\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\nexport default Footer\r\n","export const getNlbContractId = (chainId: number): string => chainId === 4 ? '0xF5D3fDEa6b3434A0E739E8db9518e82E1820ED10' : ''\r\nexport const getStakingContractId = (chainId: number): string => chainId === 4 ? '0xfc916f9bBb1c3a7E281B08f6152665398F58B814' : ''\r\n\r\nexport const infuraId = '288d3145859e45dca9d1c701fce7113e'\r\nexport const validChainIds = [1, 4]\r\n","import { createUseStyles } from 'react-jss'\r\nimport { black } from '../../config/colors'\r\n\r\nconst styles = {\r\n\t'@global': {\r\n\t\t'@keyframes spinner': {\r\n\t\t\t'100%': { transform: 'rotate(360deg)' }\r\n\t\t},\r\n\t},\r\n\tspinner: {\r\n\t\twidth: '5em',\r\n\t\theight: '5em',\r\n\t\tborderTop: `0.4em solid ${black}`,\r\n\t\tborderRight: '0.4em solid transparent',\r\n\t\tborderRadius: '50%',\r\n\t\tanimation: 'spinner 0.6s linear infinite'\r\n\t},\r\n\tspinPadding: {\r\n\t\tpadding: '1em'\r\n\t}\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import useStyles from './Spinner.styles'\r\n\r\nconst Spinner: React.FC = () => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<div className={classes.spinPadding}>\r\n\t\t\t<div className={classes.spinner}>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Spinner\r\n","/**\r\n * Fonts\r\n */\r\nexport const standardFontFamily = '\"Telegraphem\", \"Helvetica Neue\", Helvetica, Arial, sans-serif'\r\nexport const weightSemiBold = 600\r\nexport const weightRegular = 400\r\nexport const weightMedium = 500\r\nexport const headingLetterSpacing = '0.2em'\r\n","import { createUseStyles } from 'react-jss'\r\nimport { standardFontFamily, weightSemiBold } from '../../config/jss-vars'\r\nimport {\r\n\tblack,\r\n\twhite,\r\n\toff_black,\r\n\toff_white,\r\n\tcyan,\r\n\tteal,\r\n} from '../../config/colors'\r\n\r\nexport type ClassNames = 'primary' | 'link' | 'success' | 'error' | 'info'\r\n\r\nconst styles = {\r\n\tbase: {\r\n\t\tcursor: 'pointer',\r\n\t\tfontFamily: standardFontFamily,\r\n\t\tfontSize: '1rem',\r\n\t\tlineHeight: '1rem',\r\n\t\ttextAlign: 'center',\r\n\t\tdisplay: 'inline-block',\r\n\t\toutline: 'none',\r\n\t},\r\n\tbutton: {\r\n\t\tcomposes: '$base',\r\n\t\tborder: 'none',\r\n\t\tborderRadius: '0.35em',\r\n\t\tpadding: '1rem 2rem',\r\n\t\tletterSpacing: 0,\r\n\t\tboxShadow: `0em 0.15em 0.65em 0em ${off_black}`,\r\n\t\t'&:disabled': {\r\n\t\t\tcursor: 'default',\r\n\t\t\topacity: 0.5,\r\n\t\t\tpointerEvents: 'none',\r\n\t\t},\r\n\t},\r\n\tprimary: {\r\n\t\tcomposes: '$button',\r\n\t\ttextTransform: 'uppercase',\r\n\t\tfontWeight: weightSemiBold,\r\n\t\tbackground: black,\r\n\t\tcolor: off_white,\r\n\t\t'&:hover': {\r\n\t\t\tcolor: white,\r\n\t\t}\r\n\t},\r\n\tlink: {\r\n\t\tcomposes: '$base',\r\n\t\tborder: 0,\r\n\t\tcolor: cyan,\r\n\t\tcursor: 'pointer',\r\n\t\tdisplay: 'inline-block',\r\n\t\tpadding: 0,\r\n\t\tbackgroundColor: 'transparent',\r\n\t\tfontWeight: weightSemiBold,\r\n\t\tfontSize: '0.875rem',\r\n\t\theight: '0.875rem',\r\n\t\tlineHeight: '0.875rem',\r\n\t\tletterSpacing: 0.2,\r\n\t\t'&:disabled': {\r\n\t\t\tcursor: 'default',\r\n\t\t\topacity: 0.5,\r\n\t\t\tpointerEvents: 'none',\r\n\t\t},\r\n\t\t'&:hover': {\r\n\t\t\tcolor: teal,\r\n\t\t},\r\n\t},\r\n\tsuccess: {\r\n\t\tcomposes: '$primary',\r\n\t},\r\n\terror: {\r\n\t\tcomposes: '$primary',\r\n\t},\r\n\tinfo: {\r\n\t\tcomposes: '$primary',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import useStyles, { ClassNames } from './Button.styles'\r\n\r\ninterface Props {\r\n\tclassName?: ClassNames\r\n\tchildren?: React.ReactNode\r\n  onClick: () => void\r\n  disabled?: boolean\r\n}\r\n\r\nconst Button: React.FC<Props> = ({children, onClick, className, disabled}) => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={classes[className || 'button']}\r\n\t\t\tonClick={onClick}\r\n\t\t\tdisabled={disabled}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default Button\r\n","import WalletConnectProvider from '@walletconnect/web3-provider'\r\nimport { ethers } from 'ethers'\r\nimport { useContext, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport Web3Modal from 'web3modal'\r\nimport { infuraId, validChainIds } from '../../config/chain'\r\nimport { Web3Context } from '../../context/Web3/Web3Context'\r\nimport Spinner from '../Spinner/Spinner'\r\nimport Button from './Button'\r\n\r\nconst ConnectButton: React.FC = () => {\r\n\tconst { account, setAccount, setAddress, setWeb3Provider } = useContext(Web3Context)\r\n\tif (!setAccount || !setAddress || !setWeb3Provider) {\r\n\t\treturn <></>\r\n\t}\r\n\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\r\n\tconst getWeb3Modal = async () =>\r\n\t\tnew Web3Modal({\r\n\t\t\tnetwork: 'mainnet',\r\n\t\t\tcacheProvider: false,\r\n\t\t\tproviderOptions: {\r\n\t\t\t\twalletconnect: {\r\n\t\t\t\t\tpackage: WalletConnectProvider,\r\n\t\t\t\t\toptions: {\r\n\t\t\t\t\t\tinfuraId,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tdisableInjectedProvider: false,\r\n\t\t})\r\n\r\n\tconst connect = async () => {\r\n\t\tconst web3Modal = await getWeb3Modal()\r\n\t\tawait web3Modal.clearCachedProvider()\r\n\t\tconst connection = await web3Modal.connect()\r\n\r\n\t\tsetIsLoading(true)\r\n\r\n\t\tconst provider = new ethers.providers.Web3Provider(connection)\r\n\r\n\t\tif (!validChainIds.includes((await provider.getNetwork()).chainId)) {\r\n\t\t\ttoast.error(\r\n\t\t\t\t'Invalid network selected. Please switch to Mainnet',\r\n\t\t\t)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst accounts = await provider.listAccounts()\r\n\t\tconst addr = accounts[0]\r\n\t\tsetAddress(addr)\r\n\r\n\t\tlet name\r\n\t\ttry {\r\n\t\t\tname = await provider.lookupAddress(addr)\r\n\t\t} catch (err) {\r\n\t\t\t// This is fine\r\n\t\t\t// console.log(err)\r\n\t\t}\r\n\r\n\t\tif (name) {\r\n\t\t\tsetAccount(name)\r\n\t\t} else {\r\n\t\t\tsetAccount(\r\n\t\t\t\t`${addr.substring(0, 5)}...${addr.substring(\r\n\t\t\t\t\taddr.length - 4,\r\n\t\t\t\t\taddr.length,\r\n\t\t\t\t)}`,\r\n\t\t\t)\r\n\t\t}\r\n\t\tsetWeb3Provider(provider)\r\n\t\tsetIsLoading(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<Button onClick={connect} className=\"primary\">\r\n\t\t\t\t\t{account || 'Connect Wallet'}\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ConnectButton\r\n","import { createUseStyles } from 'react-jss'\r\nimport { black, teal } from '../../config/colors'\r\nimport { weightSemiBold } from '../../config/jss-vars'\r\n\r\nconst styles = {\r\n\theader: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\talignItems: 'center',\r\n\t\tgap: '1em',\r\n\t\tpadding: '1em',\r\n\t},\r\n\trightContent: {\r\n\t\tmarginLeft: 'auto',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tlink: {\r\n\t\ttextTransform: 'uppercase',\r\n\t\tcolor: black,\r\n\t\tfontSize: '1.5em',\r\n\t\tfontWeight: weightSemiBold,\r\n\t\ttextDecoration: 'none',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: teal,\r\n\t\t}\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import { Link } from 'react-router-dom'\r\nimport { HomeRoute } from '../../pages/routes'\r\nimport ConnectButton from '../Button/ConnectButton'\r\nimport Logo from '../Logo/NLBLogo'\r\nimport useStyles from './Header.styles'\r\n\r\nconst Header: React.FC = () => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<header className={classes.header}>\r\n\t\t\t<Link to={HomeRoute.path}>\r\n\t\t\t\t<Logo />\r\n\t\t\t</Link>\r\n\t\t\t<div className={classes.rightContent}>\r\n\t\t\t\t<ConnectButton />\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import { createUseStyles } from 'react-jss'\r\nimport { white } from '../../config/colors'\r\nimport { standardFontFamily } from '../../config/jss-vars'\r\n\r\nexport type ClassNames = 'default'\r\n\r\nconst styles = {\r\n\tdefault: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tminHeight: '100vh',\r\n\t\tbackground: 'url(\"/img/background_tree1.png\")',\r\n\t\tbackgroundSize: 'cover',\r\n\t\tbackgroundPosition: 'bottom',\r\n\t},\r\n\tmain: {\r\n\t\tflex: 1,\r\n\t\t'& > *': {\r\n\t\t\tfontFamily: standardFontFamily,\r\n\t\t\tcolor: white,\r\n\t\t}\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import Footer from '../Footer/Footer'\r\nimport Header from '../Header/Header'\r\nimport useStyles, { ClassNames } from './PageWrapper.styles'\r\n\r\ninterface Props {\r\n\tclassName?: ClassNames\r\n\tchildren?: React.ReactNode\r\n\thasHeader?: boolean\r\n\thasFooter?: boolean\r\n}\r\n\r\nconst PageWrapper: React.FC<Props> = ({\r\n\tchildren,\r\n\tclassName = 'default',\r\n\thasHeader = true,\r\n\thasFooter = true,\r\n}) => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<div className={classes[className]}>\r\n\t\t\t{hasHeader && <Header />}\r\n\t\t\t<main className={classes.main}>\r\n\t\t\t\t{children}\r\n\t\t\t</main>\r\n\t\t\t{hasFooter && <Footer />}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PageWrapper\r\n","import { toast } from 'react-toastify'\r\n\r\nconst doFetch = async (\r\n\tpath: string,\r\n\tmethod: string,\r\n\t// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n\tbody?: any, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n): Promise<any> => {\r\n\tlet didToast = false\r\n\ttry {\r\n\t\tconst res = await fetch(path, {\r\n\t\t\tmethod: method,\r\n\t\t\tbody: body && JSON.stringify(body),\r\n\t\t\tcredentials: 'omit',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': method !== 'GET' ? 'application/json' : 'text/plain',\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t},\r\n\t\t})\r\n\t\tif (!res.ok) {\r\n\t\t\tconst msg = `Server error: ${res.status}`\r\n\t\t\ttoast.error(msg)\r\n\t\t\tdidToast = true\r\n\t\t\tconsole.error(msg)\r\n\t\t\tthrow Error(msg)\r\n\t\t}\r\n\t\treturn await res.json()\r\n\t} catch (err) {\r\n\t\tif (!didToast) {\r\n\t\t\tconsole.error(err)\r\n\t\t\ttoast.error('Error contacting server')\r\n\t\t}\r\n\t\tthrow err\r\n\t}\r\n\treturn\r\n}\r\n\r\nexport default doFetch\r\n","import { createUseStyles } from 'react-jss'\r\nimport { weightSemiBold } from '../../config/jss-vars'\r\n\r\nconst styles = {\r\n\tsection: {\r\n\t\tmargin: '2em 0',\r\n\t},\r\n\ttext: {\r\n\t\tfontSize: '1.2em',\r\n\t\ttextTransform: 'uppercase',\r\n\t\tfontWeight: weightSemiBold,\r\n\t},\r\n\ttextSpecial: {\r\n\t\tfontSize: '1.5em',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import { useState, useEffect } from 'react'\r\n\r\nimport useStyles from './Balance.styles'\r\n\r\nimport Button from '../Button/Button'\r\nimport Spinner from '../Spinner/Spinner'\r\n\r\nconst Balance: React.FC = () => {\r\n\tconst [balance, setBalance] = useState(0)\r\n\tconst [isLoading, setIsLoading] = useState(true)\r\n\r\n\tconst classes = useStyles()\r\n\r\n\tconst getBalance = async () => {\r\n\t\t//FIXME Call contract\r\n\t\tsetBalance(0)\r\n\t\tsetIsLoading(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBalance()\r\n\t}, [])\r\n\r\n\tconst claimTokens = async () => {\r\n\t\tsetIsLoading(true)\r\n\t\t//FIXME Call contract\r\n\t\tgetBalance()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.section}>\r\n\t\t\t{isLoading ?\r\n\t\t\t\t<Spinner /> :\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button onClick={claimTokens} disabled={isLoading}>\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\tClaim $CHOW\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<p className={classes.text}>Total claimed: <span className={classes.textSpecial}>{balance} $CHOW</span></p>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Balance\r\n","import { createUseStyles } from 'react-jss'\r\nimport { off_white, cyan, black } from '../../config/colors'\r\nimport { weightRegular, weightSemiBold } from '../../config/jss-vars'\r\n\r\nconst styles = {\r\n\tcard: {\r\n\t\tpadding: '1em',\r\n\t\tmargin: '1em',\r\n\t\tbackgroundColor: off_white,\r\n\t\tborderRadius: '20px',\r\n\t\tcursor: 'pointer',\r\n\t\tcolor: black,\r\n\t},\r\n\tselectedCard: {\r\n\t\tcomposes: '$card',\r\n\t\tbackgroundColor: cyan,\r\n\t},\r\n\timage: {\r\n\t\tmaxWidth: '200px',\r\n\t\tborderRadius: '6px',\r\n\t},\r\n\tcaption: {\r\n\t\ttextAlign: 'left',\r\n\t\tfontWeight: weightSemiBold,\r\n\t},\r\n\tsmall: {\r\n\t\tfontWeight: weightRegular,\r\n\t}\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import { NFTMetadata } from '../../interface/nftMetadata'\r\n\r\nimport useStyles from './NFTCard.styles'\r\n\r\ninterface Props {\r\n\tnft: NFTMetadata\r\n\tselected: boolean\r\n\tonClick: (name: string) => void\r\n}\r\n\r\nconst NFTCard: React.FC<Props> = ({ nft, selected, onClick }) => {\r\n\tconst classes = useStyles()\r\n\treturn (\r\n\t\t<div className={selected ? classes.selectedCard : classes.card} onClick={() => onClick(nft.name)}>\r\n\t\t\t<img className={classes.image} src={nft?.image}></img>\r\n\t\t\t<p className={classes.caption}>\r\n\t\t\t\t{nft?.name}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NFTCard\r\n","import { createUseStyles } from 'react-jss'\r\nimport { headingLetterSpacing, standardFontFamily } from '../../config/jss-vars'\r\n\r\nconst styles = {\r\n\tsectionContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\twidth: '100%',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tmaxWidth: '60em',\r\n\t},\r\n\theading: {\r\n\t\tfontFamily: standardFontFamily,\r\n\t\tletterSpacing: headingLetterSpacing,\r\n\t\tfontSize: '2em',\r\n\t\tmargin: 0,\r\n\t\ttextTransform: 'uppercase',\r\n\t},\r\n\tsubheading: {\r\n\t\tmarginBottom: '1em',\r\n\t}\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import { BigNumber, Contract, ethers } from 'ethers'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport nlbABI from '../../abi/nlbABI.json'\r\nimport stakingABI from '../../abi/stakingABI.json'\r\nimport { getNlbContractId, getStakingContractId } from '../../config/chain'\r\nimport { Web3Context } from '../../context/Web3/Web3Context'\r\nimport { NFTMetadata } from '../../interface/nftMetadata'\r\nimport doFetch from '../../utils/doFetch'\r\nimport Balance from '../Balance/Balance'\r\nimport Button from '../Button/Button'\r\nimport Spinner from '../Spinner/Spinner'\r\nimport NFTCard from './NFTCard'\r\nimport useStyles from './Staking.styles'\r\n\r\ninterface NFTSelected extends NFTMetadata {\r\n\ttokenId: BigNumber\r\n\tselected: boolean\r\n}\r\n\r\nconst Staking: React.FC = () => {\r\n\tconst [unstaked, setUnstaked] = useState<NFTSelected[]>([])\r\n\tconst [staked, setStaked] = useState<NFTSelected[]>([])\r\n\tconst [stakingContract, setStakingContract] = useState<Contract>()\r\n\tconst [nlbContract, setNlbContract] = useState<Contract>()\r\n\tconst [isLoading, setIsLoading] = useState(true)\r\n\tconst [isApproved, setIsApproved] = useState(false)\r\n\tconst [txPending, setTxPending] = useState(false)\r\n\tconst [forceRefresh, setForceRefresh] = useState(true) // Toggle this state to force a refresh\r\n\r\n\tconst { address, web3Provider } = useContext(Web3Context)\r\n\r\n\tif (!web3Provider) {\r\n\t\treturn <></>\r\n\t}\r\n\r\n\tconst classes = useStyles()\r\n\r\n\tuseEffect(() => {\r\n\t\tgetNLBs()\r\n\t}, [web3Provider])\r\n\r\n\tconst getNLBs = async () => {\r\n\t\tsetIsLoading(true)\r\n\r\n\t\tconst { chainId } = await web3Provider.getNetwork()\r\n\t\tconst stakingContractId = getStakingContractId(chainId)\r\n\t\tconst nlbContractId = getNlbContractId(chainId)\r\n\t\tif (!stakingContractId || !nlbContractId) {\r\n\t\t\tsetIsLoading(false)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst signer = web3Provider.getSigner()\r\n\t\tconst _stakingContract = new ethers.Contract(\r\n\t\t\tstakingContractId,\r\n\t\t\tstakingABI,\r\n\t\t\tsigner,\r\n\t\t)\r\n\t\tsetStakingContract(_stakingContract)\r\n\r\n\t\tconst _nlbContract = new ethers.Contract(\r\n\t\t\tnlbContractId,\r\n\t\t\tnlbABI,\r\n\t\t\tsigner,\r\n\t\t)\r\n\t\tsetNlbContract(_nlbContract)\r\n\r\n\t\tconst allNLBs = await _nlbContract.walletOfOwner(address)\r\n\t\t// const allNLBs = [BigNumber.from(1), BigNumber.from(2)]\r\n\t\tconst stakedNLBs = await _stakingContract.listStakedTokensOfOwner(address)\r\n\t\tconst unstakedNLBs: BigNumber[] = []\r\n\r\n\t\tallNLBs.forEach((token_id: BigNumber) => {\r\n\t\t\tif (!stakedNLBs.includes(token_id)) {\r\n\t\t\t\tunstakedNLBs.push(token_id)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst stakedNLBData: NFTSelected[] = []\r\n\t\tconst unstakedNLBData: NFTSelected[] = []\r\n\r\n\t\tconst basePath = await _nlbContract.baseURI()\r\n\t\t// const basePath = 'https://opensea.mypinata.cloud/ipfs/QmeSjSinHpPnmXmspMjwiXyN6zS4E9zccariGR3jxcaWtq/'\r\n\r\n\t\tlet metadataPromises: Promise<NFTSelected>[] = []\r\n\r\n\t\t// Get staked metadata\r\n\t\tfor (let i = 0; i < stakedNLBs.length; i++) {\r\n\t\t\tmetadataPromises.push(doFetch(\r\n\t\t\t\t`${basePath}${stakedNLBs[i].toNumber()}`,\r\n\t\t\t\t'GET',\r\n\t\t\t))\r\n\t\t}\r\n\t\tawait Promise.all(metadataPromises)\r\n\t\tfor (let i = 0; i < stakedNLBs.length; i++) {\r\n\t\t\tconst metadata: NFTSelected = await metadataPromises[i]\r\n\t\t\tmetadata.tokenId = stakedNLBs[i]\r\n\t\t\tmetadata.selected = false\r\n\t\t\tmetadata.name = metadata.name || `#${stakedNLBs[i].toNumber()}`\r\n\t\t\tmetadata.image = metadata.image.replace('ipfs://', 'https://ipfs.io/ipfs/')\r\n\t\t\tstakedNLBData.push(metadata)\r\n\t\t}\r\n\t\t\r\n\t\t// Get unstaked metadata\r\n\t\tmetadataPromises = []\r\n\t\tfor (let i = 0; i < unstakedNLBs.length; i++) {\r\n\t\t\tmetadataPromises.push(doFetch(\r\n\t\t\t\t`${basePath}${unstakedNLBs[i].toNumber()}`,\r\n\t\t\t\t'GET',\r\n\t\t\t))\r\n\t\t}\r\n\t\tawait Promise.all(metadataPromises)\r\n\t\tfor (let i = 0; i < unstakedNLBs.length; i++) {\r\n\t\t\tconst metadata = await metadataPromises[i]\r\n\t\t\tmetadata.tokenId = unstakedNLBs[i]\r\n\t\t\tmetadata.selected = false\r\n\t\t\tmetadata.name = metadata.name || `#${unstakedNLBs[i].toNumber()}`\r\n\t\t\tmetadata.image = metadata.image.replace('ipfs://', 'https://ipfs.io/ipfs/')\r\n\t\t\tconsole.error(metadata)\r\n\t\t\tunstakedNLBData.push(metadata)\r\n\t\t}\r\n\r\n\t\tsetStaked(stakedNLBData)\r\n\t\tsetUnstaked(unstakedNLBData)\r\n\r\n\t\t// Check approved status\r\n\t\tsetIsApproved(\r\n\t\t\tawait _nlbContract.isApprovedForAll(\r\n\t\t\t\taddress,\r\n\t\t\t\tstakingContractId,\r\n\t\t\t),\r\n\t\t)\r\n\r\n\t\tsetIsLoading(false)\r\n\t}\r\n\r\n\tconst updateSelected = (name: string) => {\r\n\t\tlet nlb = staked.find(h => h.name === name)\r\n\t\tif (nlb) {\r\n\t\t\tnlb.selected = !nlb.selected\r\n\t\t\tsetStaked(staked)\r\n\t\t} else {\r\n\t\t\tnlb = unstaked.find(h => h.name === name)\r\n\t\t\tif (nlb) {\r\n\t\t\t\tnlb.selected = !nlb.selected\r\n\t\t\t\tsetUnstaked(unstaked)\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetForceRefresh(!forceRefresh)\r\n\t}\r\n\r\n\tconst doApproval = async () => {\r\n\t\tif (isApproved) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst { chainId } = await web3Provider.getNetwork()\r\n\t\tconst stakingContractId = getStakingContractId(chainId)\r\n\t\tconst tx = await nlbContract?.setApprovalForAll(stakingContractId, true)\r\n\t\tsetTxPending(true)\r\n\t\tawait tx.wait()\r\n\t\tsetIsApproved(true)\r\n\t\tsetTxPending(false)\r\n\t}\r\n\r\n\tconst doStake = async () => {\r\n\t\tif (!isApproved) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst selected = unstaked.filter(h => h.selected).map(h => h.tokenId)\r\n\t\tif (!selected.length) {\r\n\t\t\twindow.alert('Please select NLBs to stake')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst tx = await stakingContract?.stake(selected)\r\n\t\tsetTxPending(true)\r\n\t\tawait tx.wait()\r\n\t\tsetTxPending(false)\r\n\t\tgetNLBs()\r\n\t}\r\n\r\n\tconst doUnstake = async () => {\r\n\t\tconst selected = staked.filter(h => h.selected).map(h => h.tokenId)\r\n\t\tif (!selected.length) {\r\n\t\t\twindow.alert('Please select NLBs to unstake')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst tx = await stakingContract?.unstake(selected)\r\n\t\tsetTxPending(true)\r\n\t\tawait tx.wait()\r\n\t\tsetTxPending(false)\r\n\t\tgetNLBs()\r\n\t}\r\n\r\n\tconst hasStakeSelected = !!staked.find(h => h.selected)\r\n\tconst hasUnstakeSelected = !!unstaked.find(h => h.selected)\r\n\r\n\treturn (\r\n\t\t<div className={classes.sectionContainer}>\r\n\t\t\t<div>\r\n\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) :\r\n\t\t\t\t\tstaked.length === 0 && unstaked.length === 0 ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<h2 className={classes.heading}>No NLBs</h2>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<h2 className={classes.heading}>Staked</h2>\r\n\t\t\t\t\t\t\t{staked.length > 0 ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t\t\t\t\t\t{staked.map(nlb => (\r\n\t\t\t\t\t\t\t\t\t\t\t<NFTCard\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={nlb.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tnft={nlb}\r\n\t\t\t\t\t\t\t\t\t\t\t\tselected={nlb.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={updateSelected}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{hasStakeSelected && (\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={doUnstake} disabled={txPending}>\r\n\t\t\t\t\t\t\t\t\t\t\t{txPending ? 'Tx Pending...' : 'Unstake'}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<p>No NLBs staked</p>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Balance />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t{!isLoading && unstaked.length > 0 && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2 className={classes.heading}>Unstaked</h2>\r\n\t\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t\t{unstaked.map(nlb => (\r\n\t\t\t\t\t\t\t<NFTCard\r\n\t\t\t\t\t\t\t\tkey={nlb.name}\r\n\t\t\t\t\t\t\t\tnft={nlb}\r\n\t\t\t\t\t\t\t\tselected={nlb.selected}\r\n\t\t\t\t\t\t\t\tonClick={updateSelected}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isApproved ? (\r\n\t\t\t\t\t\t<Button onClick={doStake} disabled={txPending || !hasUnstakeSelected}>\r\n\t\t\t\t\t\t\t{txPending ? 'Tx Pending...' : 'Stake'}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Button onClick={doApproval} disabled={txPending || !hasUnstakeSelected}>\r\n\t\t\t\t\t\t\t{txPending ? 'Tx Pending...' : 'Approve'}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Staking\r\n","import { createUseStyles } from 'react-jss'\r\n\r\nconst styles = {\r\n\tpage: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import PageWrapper from '../../components/PageWrapper/PageWrapper'\r\nimport Staking from '../../components/Staking/Staking'\r\nimport useStyles from './Profile.styles'\r\n\r\nconst Profile: React.FC = () => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<PageWrapper>\r\n\t\t\t<div className={classes.page}>\r\n\t\t\t\t<Staking />\r\n\t\t\t</div>\r\n\t\t</PageWrapper>\r\n\t)\r\n}\r\n\r\nexport default Profile\r\n","import { createUseStyles } from 'react-jss'\r\n\r\nconst styles = {\r\n\tpage: {\r\n\t\tminHeight: '100vh',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\tbackground: 'url(\"/img/background_tree1.png\")',\r\n\t\tbackgroundSize: 'cover',\r\n\t\tbackgroundPosition: 'bottom',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import ConnectButton from '../../components/Button/ConnectButton'\r\nimport PageWrapper from '../../components/PageWrapper/PageWrapper'\r\nimport useStyles from './ConnectWallet.styles'\r\n\r\nconst ConnectWallet: React.FC = () => {\r\n\tconst classes = useStyles()\r\n\treturn (\r\n\t\t<PageWrapper hasHeader={false} hasFooter={false}>\r\n\t\t\t<div className={classes.page}>\r\n\t\t\t\t<ConnectButton />\r\n\t\t\t</div>\r\n\t\t</PageWrapper>\r\n\t)\r\n}\r\n\r\nexport default ConnectWallet\r\n","import { HashRouter, Navigate, Route, Routes } from 'react-router-dom'\r\nimport { ProfileRoute } from './routes'\r\nimport Profile from './Profile/Profile'\r\nimport { useContext } from 'react'\r\nimport { Web3Context } from '../context/Web3/Web3Context'\r\nimport ConnectWallet from './ConnectWallet/ConnectWallet'\r\n\r\nconst Router: React.FC = () => {\r\n\tconst { web3Provider } = useContext(Web3Context)\r\n\r\n\tif (!web3Provider) {\r\n\t\t// Require wallet connection\r\n\t\treturn (<ConnectWallet />)\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t{/* <Route path={HomeRoute.path} element={<Home />} /> */}\r\n\t\t\t\t\t<Route path={ProfileRoute.path} element={<Profile />} />\r\n\t\t\t\t\t<Route path=\"*\" element={<Navigate to={ProfileRoute.path} />} />\r\n\t\t\t\t</Routes>\r\n\t\t\t</HashRouter>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Router\r\n","import Web3ContextProvider from './context/Web3/Web3Context'\r\nimport Router from './pages/Router'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst App: React.FC = () => {\r\n\treturn (\r\n\t\t<Web3ContextProvider>\r\n\t\t\t<Router />\r\n\t\t\t<ToastContainer\r\n\t\t\t\ttheme='dark'\r\n\t\t\t\tposition='top-center'\r\n\t\t\t\tautoClose={5000}\r\n\t\t\t\tpauseOnFocusLoss={false}\r\n\t\t\t\tdraggable={false}\r\n\t\t\t/>\r\n\t\t</Web3ContextProvider>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry)\r\n\t\t\tgetFID(onPerfEntry)\r\n\t\t\tgetFCP(onPerfEntry)\r\n\t\t\tgetLCP(onPerfEntry)\r\n\t\t\tgetTTFB(onPerfEntry)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement)\nroot.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}