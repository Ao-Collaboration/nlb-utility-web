{"version":3,"sources":["config/chain.tsx","context/Web3/Web3Context.tsx","context/Web3/ContractContext.tsx","pages/routes.tsx","utils/format.tsx","config/jss-vars.tsx","config/colors.tsx","components/Button/Button.styles.tsx","components/Button/Button.tsx","components/Text/Text.styles.tsx","components/Text/Text.tsx","components/InfoPanel/InfoPanel.styles.tsx","components/InfoPanel/InfoPanel.tsx","components/Spinner/Spinner.styles.tsx","components/Spinner/Spinner.tsx","components/Balance/Balance.styles.tsx","components/Balance/Balance.tsx","config/mediaQueryHelper.tsx","components/Button/ConnectButton.tsx","components/Logo/Logo.styles.tsx","components/Logo/NLBLogo.tsx","components/Logo/EtherscanLogo.tsx","components/Logo/OpenseaLogo.tsx","components/SocialLink/SocialLink.styles.tsx","components/SocialLink/SocialLink.tsx","components/Header/Header.styles.tsx","components/Header/Header.tsx","components/Logo/AoLogo.tsx","components/Footer/Footer.styles.tsx","components/Footer/Footer.tsx","components/PageWrapper/PageWrapper.styles.tsx","components/PageWrapper/PageWrapper.tsx","utils/doFetch.tsx","components/Staking/NFTCard.styles.tsx","components/Staking/NFTCard.tsx","components/Staking/Staking.styles.tsx","components/Staking/Staking.tsx","pages/Profile/Profile.styles.tsx","pages/Profile/Profile.tsx","pages/ConnectWallet/ConnectWallet.styles.tsx","pages/ConnectWallet/ConnectWallet.tsx","pages/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getNlbContractId","chainId","getStakingContractId","validChainIds","Web3Context","createContext","Web3ContextProvider","children","useState","account","setAccount","address","setAddress","web3Provider","setWeb3Provider","Provider","value","ContractContext","ContractContextProvider","useContext","stakingContract","setStakingContract","stakingContractId","setStakingContractId","nlbContract","setNlbContract","nlbContractId","setNlbContractId","useEffect","getContracts","a","getNetwork","_stakingContractId","_nlbContractId","signer","getSigner","_stakingContract","ethers","Contract","stakingABI","_nlbContract","nlbABI","HomeRoute","ProfileRoute","formatEthers","bn","dp","Number","utils","formatEther","toFixed","standardFontFamily","weightSemiBold","headingLetterSpacing","black","white","light_blue","purple","off_white","text_shadow","styles","base","cursor","fontFamily","fontSize","lineHeight","textAlign","display","outline","button","composes","border","borderRadius","padding","letterSpacing","textTransform","fontWeight","boxShadow","opacity","pointerEvents","primary","background","color","primaryInverted","primaryBlack","link","backgroundColor","height","success","error","info","createUseStyles","Button","onClick","className","disabled","classes","useStyles","textShadow","margin","h1","h2","h3","h4","h5","body","bodyPurple","bodyBlue","small","Text","variant","card","flexDirection","gap","title","content","InfoPanel","buttonText","isLoading","setIsLoading","doOnClick","transform","spinner","width","borderTop","borderRight","animation","spinPadding","Spinner","section","justifyContent","alignItems","text","textSpecial","Balance","balance","setBalance","stakedNLBs","setStakedNLBs","owed","setOwed","getBalances","listStakedTokensOfOwner","balanceOf","listClaimableRewardsOfOwner","claimables","claimable","reduce","next","curr","add","constants","Zero","claimTokens","length","claim","tx","wait","Error","toast","message","addToMM","window","ethereum","request","method","params","type","options","symbol","decimals","image","BREAK_POINT_SMALL","BREAK_POINT_MEDIUM","min","size","ConnectButton","getWeb3Modal","Web3Modal","network","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","disableInjectedProvider","connect","web3Modal","clearCachedProvider","connection","provider","providers","Web3Provider","includes","listAccounts","accounts","addr","lookupAddress","name","substring","defaultHeight","default","invert","filter","large","largeInverted","NLBLogo","src","process","alt","EtherscanLogo","OpenseaLogo","square","marginTop","makeLogoLink","logo","href","makeFALink","icon","TwitterLink","faTwitter","InstagramLink","faInstagram","DiscordLink","faDiscord","OpenseaLink","EtherscanLink","contract","contractId","SocialLinks","HEADER_HEIGHT","spacer","marginBottom","header","backdropFilter","minHeight","maxHeight","boxSizing","position","inner","group","groupClose","textDecoration","borderBottom","Header","to","query","AoLogo","footer","banner","gridTemplateColumns","center","right","Footer","backgroundSize","backgroundPosition","main","flex","PageWrapper","hasHeader","hasFooter","doFetch","path","didToast","fetch","JSON","stringify","credentials","headers","Accept","res","ok","msg","status","console","json","selectedCard","maxWidth","caption","NFTCard","nft","selected","slice","loop","autoPlay","sectionContainer","container","flexWrap","titleSection","heading","Staking","unstaked","setUnstaked","staked","setStaked","isApproved","setIsApproved","txPending","setTxPending","forceRefresh","setForceRefresh","getNLBs","walletOfOwner","unstakedNLBs","stakedNLBData","unstakedNLBData","baseURI","basePath","metadataPromises","cleanMetadata","metadata","tokenId","toNumber","replace","i","push","Promise","all","isApprovedForAll","AddressZero","updateSelected","nlb","find","h","doApproval","setApprovalForAll","doStake","map","alert","stake","doUnstake","unstake","hasStakeSelected","hasUnstakeSelected","page","backgroundRepeat","fadedBlackHeight","fadedBlack","backgroundImage","Profile","ConnectWallet","Router","element","App","theme","autoClose","pauseOnFocusLoss","draggable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.97f5b851.chunk.js","sourcesContent":["export const getNlbContractId = (chainId: number): string => chainId === 4 ? '0xF5D3fDEa6b3434A0E739E8db9518e82E1820ED10' : '0x0e29086b5a3c8a0abd0662f5f1a4be2bee158058'\r\nexport const getStakingContractId = (chainId: number): string => chainId === 4 ? '0x504F1593EfDc4C9E0d0CA74514804200c0A33bf8' : '0xf7f1ca313a595c745dbb2c2ee1d58e6398861043'\r\n\r\nexport const infuraId = '288d3145859e45dca9d1c701fce7113e'\r\nexport const validChainIds = [1, 4]\r\n","import {\r\n\tcreateContext,\r\n\tDispatch,\r\n\tFC,\r\n\tReactNode,\r\n\tSetStateAction,\r\n\tuseState,\r\n} from 'react'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\n\r\ninterface CtxProps {\r\n\taccount?: string | null\r\n\tsetAccount?: Dispatch<SetStateAction<string | null>>\r\n\taddress?: string | null\r\n\tsetAddress?: Dispatch<SetStateAction<string | null>>\r\n\tweb3Provider?: Web3Provider | null\r\n\tsetWeb3Provider?: Dispatch<SetStateAction<Web3Provider | null>>\r\n}\r\ninterface Props {\r\n\tchildren: ReactNode\r\n}\r\n\r\nexport const Web3Context = createContext<CtxProps>({})\r\nconst Web3ContextProvider: FC<Props> = ({ children }) => {\r\n\tconst [account, setAccount] = useState<string | null>(null)\r\n\tconst [address, setAddress] = useState<string | null>(null)\r\n\tconst [web3Provider, setWeb3Provider] = useState<Web3Provider | null>(null)\r\n\r\n\treturn (\r\n\t\t<Web3Context.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\taccount,\r\n\t\t\t\tsetAccount,\r\n\t\t\t\taddress,\r\n\t\t\t\tsetAddress,\r\n\t\t\t\tweb3Provider,\r\n\t\t\t\tsetWeb3Provider,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Web3Context.Provider>\r\n\t)\r\n}\r\n\r\nexport default Web3ContextProvider\r\n","import { Contract, ethers } from 'ethers'\r\nimport {\r\n\tcreateContext,\r\n\tFC,\r\n\tReactNode,\r\n\tuseContext,\r\n\tuseEffect,\r\n\tuseState,\r\n} from 'react'\r\nimport nlbABI from '../../abi/nlbABI.json'\r\nimport stakingABI from '../../abi/stakingABI.json'\r\nimport { getNlbContractId, getStakingContractId } from '../../config/chain'\r\nimport { Web3Context } from './Web3Context'\r\n\r\ninterface CtxProps {\r\n\tstakingContract?: Contract\r\n\tstakingContractId?: string\r\n\tnlbContract?: Contract\r\n\tnlbContractId?: string\r\n}\r\ninterface Props {\r\n\tchildren: ReactNode\r\n}\r\n\r\nexport const ContractContext = createContext<CtxProps>({})\r\nconst ContractContextProvider: FC<Props> = ({ children }) => {\r\n\tconst { web3Provider } = useContext(Web3Context)\r\n\r\n\tconst [stakingContract, setStakingContract] = useState<Contract>()\r\n\tconst [stakingContractId, setStakingContractId] = useState<string>()\r\n\tconst [nlbContract, setNlbContract] = useState<Contract>()\r\n\tconst [nlbContractId, setNlbContractId] = useState<string>()\r\n\r\n\tuseEffect(() => {\r\n\t\tgetContracts()\r\n\t}, [web3Provider])\r\n\r\n\tconst getContracts = async () => {\r\n\t\tif (!web3Provider) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst { chainId } = await web3Provider.getNetwork()\r\n\t\tconst _stakingContractId = getStakingContractId(chainId)\r\n\t\tconst _nlbContractId = getNlbContractId(chainId)\r\n\r\n\t\tconst signer = web3Provider.getSigner()\r\n\r\n\t\tif (_stakingContractId) {\r\n\t\t\tsetStakingContractId(_stakingContractId)\r\n\t\t\tconst _stakingContract = new ethers.Contract(\r\n\t\t\t\t_stakingContractId,\r\n\t\t\t\tstakingABI,\r\n\t\t\t\tsigner,\r\n\t\t\t)\r\n\t\t\tsetStakingContract(_stakingContract)\r\n\t\t}\r\n\r\n\t\tif (_nlbContractId) {\r\n\t\t\tsetNlbContractId(_nlbContractId)\r\n\t\t\tconst _nlbContract = new ethers.Contract(_nlbContractId, nlbABI, signer)\r\n\t\t\tsetNlbContract(_nlbContract)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ContractContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tstakingContract,\r\n\t\t\t\tstakingContractId,\r\n\t\t\t\tnlbContract,\r\n\t\t\t\tnlbContractId,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</ContractContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default ContractContextProvider\r\n","export interface Route {\r\n\tname: string,\r\n\tpath: string,\r\n\tbasePath?: string,\r\n}\r\n\r\nexport const HomeRoute: Route = {\r\n\tname: 'Home',\r\n\tpath: '/',\r\n}\r\n\r\nexport const ProfileRoute: Route = {\r\n\tname: 'Profile',\r\n\tpath: '/profile'\r\n}\r\n","import { BigNumber, ethers } from 'ethers'\r\n\r\nexport const formatEthers = (bn: BigNumber, dp?: number): string =>\r\n\tNumber(ethers.utils.formatEther(bn)).toFixed(dp || 2)\r\n","/**\r\n * Fonts\r\n */\r\nexport const standardFontFamily = '\"Telegraphem\", \"Helvetica Neue\", Helvetica, Arial, sans-serif'\r\nexport const weightSemiBold = 600\r\nexport const weightRegular = 400\r\nexport const weightMedium = 500\r\nexport const headingLetterSpacing = '0.2em'\r\n","/**\r\n * Colors\r\n */\r\nexport const black = '#000'\r\nexport const white = '#FFF'\r\nexport const light_blue = '#75BFFF'\r\nexport const cyan = '#46BEAA'\r\nexport const teal = '#137055'\r\nexport const purple = '#911699'\r\n\r\nexport const off_black = 'rgba(0,0,0,0.25)'\r\nexport const off_grey = 'rgba(48, 31, 57, 0.8)'\r\nexport const off_white = 'rgba(255,255,255,0.85)'\r\nexport const off_purple = 'rgba(145,22,153,0.85)'\r\nexport const slight_white = 'rgba(255,255,255,0.15)'\r\nexport const text_shadow = '#000000B3'\r\n","import { createUseStyles } from 'react-jss'\r\nimport { standardFontFamily, weightSemiBold } from '../../config/jss-vars'\r\nimport {\r\n\twhite,\r\n\toff_black,\r\n\toff_white,\r\n\tcyan,\r\n\tteal,\r\n\tpurple,\r\n\toff_purple,\r\n\tblack,\r\n} from '../../config/colors'\r\n\r\nexport type ClassNames = 'primary' | 'primaryInverted' | 'primaryBlack' | 'link' | 'success' | 'error' | 'info'\r\n\r\nconst styles = {\r\n\tbase: {\r\n\t\tcursor: 'pointer',\r\n\t\tfontFamily: standardFontFamily,\r\n\t\tfontSize: '1rem',\r\n\t\tlineHeight: '1rem',\r\n\t\ttextAlign: 'center',\r\n\t\tdisplay: 'inline-block',\r\n\t\toutline: 'none',\r\n\t},\r\n\tbutton: {\r\n\t\tcomposes: '$base',\r\n\t\tborder: 'none',\r\n\t\tborderRadius: '0.35em',\r\n\t\tpadding: '0.75rem 4rem',\r\n\t\tletterSpacing: 0,\r\n\t\ttextTransform: 'uppercase',\r\n\t\tfontWeight: weightSemiBold,\r\n\t\tboxShadow: `0em 0.15em 0.65em 0em ${off_black}`,\r\n\t\t'&:disabled': {\r\n\t\t\tcursor: 'default',\r\n\t\t\topacity: 0.5,\r\n\t\t\tpointerEvents: 'none',\r\n\t\t},\r\n\t},\r\n\tprimary: {\r\n\t\tcomposes: '$button',\r\n\t\tbackground: purple,\r\n\t\tcolor: off_white,\r\n\t\t'&:hover': {\r\n\t\t\tcolor: white,\r\n\t\t}\r\n\t},\r\n\tprimaryInverted: {\r\n\t\tcomposes: '$button',\r\n\t\tbackground: white,\r\n\t\tcolor: off_purple,\r\n\t\t'&:hover': {\r\n\t\t\tcolor: purple,\r\n\t\t}\r\n\t},\r\n\tprimaryBlack: {\r\n\t\tcomposes: '$button',\r\n\t\tbackground: black,\r\n\t\tcolor: off_white,\r\n\t\t'&:hover': {\r\n\t\t\tcolor: white,\r\n\t\t}\r\n\t},\r\n\tlink: {\r\n\t\tcomposes: '$base',\r\n\t\tborder: 0,\r\n\t\tcolor: cyan,\r\n\t\tcursor: 'pointer',\r\n\t\tdisplay: 'inline-block',\r\n\t\tpadding: 0,\r\n\t\tbackgroundColor: 'transparent',\r\n\t\tfontWeight: weightSemiBold,\r\n\t\tfontSize: '0.875rem',\r\n\t\theight: '0.875rem',\r\n\t\tlineHeight: '0.875rem',\r\n\t\tletterSpacing: 0.2,\r\n\t\t'&:disabled': {\r\n\t\t\tcursor: 'default',\r\n\t\t\topacity: 0.5,\r\n\t\t\tpointerEvents: 'none',\r\n\t\t},\r\n\t\t'&:hover': {\r\n\t\t\tcolor: teal,\r\n\t\t},\r\n\t},\r\n\tsuccess: {\r\n\t\tcomposes: '$primary',\r\n\t},\r\n\terror: {\r\n\t\tcomposes: '$primary',\r\n\t},\r\n\tinfo: {\r\n\t\tcomposes: '$primary',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import useStyles, { ClassNames } from './Button.styles'\r\n\r\ninterface Props {\r\n\tclassName?: ClassNames\r\n\tchildren?: React.ReactNode\r\n  onClick: () => void\r\n  disabled?: boolean\r\n}\r\n\r\nconst Button: React.FC<Props> = ({children, onClick, className, disabled}) => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={classes[className || 'button']}\r\n\t\t\tonClick={onClick}\r\n\t\t\tdisabled={disabled}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default Button\r\n","import { createUseStyles } from 'react-jss'\r\nimport { headingLetterSpacing, standardFontFamily } from '../../config/jss-vars'\r\nimport {\r\n\twhite,\r\n\tlight_blue,\r\n\ttext_shadow,\r\n\tpurple,\r\n\tblack,\r\n} from '../../config/colors'\r\n\r\nconst textShadow = `-0.15em -1px 1px ${text_shadow}`\r\n\r\nconst styles = {\r\n\tbase: {\r\n\t\tfontFamily: standardFontFamily,\r\n\t\tletterSpacing: headingLetterSpacing,\r\n\t\tcolor: white,\r\n\t\tmargin: '0.8em 0',\r\n\t\ttextTransform: 'uppercase',\r\n\t},\r\n\th1: {\r\n\t\tcomposes: '$base',\r\n\t\tfontSize: '3em',\r\n\t\tcolor: light_blue,\r\n\t\ttextShadow,\r\n\t},\r\n\th2: {\r\n\t\tcomposes: '$base',\r\n\t\tfontSize: '2em',\r\n\t\tcolor: white,\r\n\t\ttextShadow,\r\n\t},\r\n\th3: {\r\n\t\tcomposes: '$base',\r\n\t\tcolor: black,\r\n\t},\r\n\th4: {\r\n\t\tcomposes: '$base',\r\n\t\tcolor: light_blue,\r\n\t},\r\n\th5: {\r\n\t\tcomposes: '$base',\r\n\t\tcolor: light_blue,\r\n\t},\r\n\tbody: {\r\n\t\tcomposes: '$base',\r\n\t\tcolor: white,\r\n\t\ttextShadow,\r\n\t},\r\n\tbodyPurple: {\r\n\t\tcomposes: '$body',\r\n\t\ttextShadow: 'none',\r\n\t\tcolor: purple,\r\n\t},\r\n\tbodyBlue: {\r\n\t\tcomposes: '$body',\r\n\t\tcolor: light_blue,\r\n\t},\r\n\tsmall: {\r\n\t\tcomposes: '$body',\r\n\t\tfontSize: '0.8em',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import useStyles from './Text.styles'\r\n\r\nexport type Variants = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'body' | 'body-blue' | 'body-purple' | 'small'\r\n\r\ninterface Props {\r\n\tchildren?: React.ReactNode\r\n\tvariant: Variants\r\n}\r\n\r\nconst Text: React.FC<Props> = ({ children, variant }) => {\r\n\tconst classes = useStyles()\r\n\r\n\tif (variant === 'h1') {\r\n\t\treturn <h1 className={classes.h1}>{children}</h1>\r\n\t} else if (variant === 'h2') {\r\n\t\treturn <h2 className={classes.h2}>{children}</h2>\r\n\t} else if (variant === 'h3') {\r\n\t\treturn <h3 className={classes.h3}>{children}</h3>\r\n\t} else if (variant === 'h4') {\r\n\t\treturn <h4 className={classes.h4}>{children}</h4>\r\n\t} else if (variant === 'h5') {\r\n\t\treturn <h5 className={classes.h5}>{children}</h5>\r\n\t} else if (variant === 'body') {\r\n\t\treturn <p className={classes.body}>{children}</p>\r\n\t} else if (variant === 'body-blue') {\r\n\t\treturn <p className={classes.bodyBlue}>{children}</p>\r\n\t} else if (variant === 'body-purple') {\r\n\t\treturn <p className={classes.bodyPurple}>{children}</p>\r\n\t} else if (variant === 'small') {\r\n\t\treturn <p className={classes.small}>{children}</p>\r\n\t} else {\r\n\t\treturn null\r\n\t}\r\n}\r\n\r\nexport default Text\r\n","import { createUseStyles } from 'react-jss'\r\nimport { black, white } from '../../config/colors'\r\nimport { weightSemiBold } from '../../config/jss-vars'\r\n\r\nconst styles = {\r\n\tcard: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tgap: '0.5em',\r\n\t\tpadding: '1.5em 4em',\r\n\t\tbackgroundColor: white,\r\n\t\tborderRadius: '20px',\r\n\t\tcolor: black,\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: '1.2em',\r\n\t\ttextTransform: 'uppercase',\r\n\t\tfontWeight: weightSemiBold,\r\n\t},\r\n\tcontent: {\r\n\t\tfontSize: '1.5em',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import { useState } from 'react'\r\nimport Button from '../Button/Button'\r\nimport Text from '../Text/Text'\r\nimport useStyles from './InfoPanel.styles'\r\n\r\ninterface Props {\r\n\ttitle: string\r\n\tcontent: string\r\n\tonClick?: () => void\r\n\tbuttonText?: string\r\n}\r\n\r\nconst InfoPanel: React.FC<Props> = ({\r\n\ttitle,\r\n\tcontent,\r\n\tonClick,\r\n\tbuttonText,\r\n}) => {\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\r\n\tconst classes = useStyles()\r\n\r\n\tconst doOnClick = async () => {\r\n\t\tif (onClick) {\r\n\t\t\tsetIsLoading(true)\r\n\t\t\tawait onClick()\r\n\t\t\tsetIsLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.card}>\r\n\t\t\t<Text variant=\"body-purple\">{title}</Text>\r\n\t\t\t<Text variant=\"h3\">{content}</Text>\r\n\t\t\t{onClick && buttonText && (\r\n\t\t\t\t<Button onClick={doOnClick} disabled={isLoading} className='primary'>\r\n\t\t\t\t\t{buttonText}\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default InfoPanel\r\n","import { createUseStyles } from 'react-jss'\r\nimport { white } from '../../config/colors'\r\n\r\nconst styles = {\r\n\t'@global': {\r\n\t\t'@keyframes spinner': {\r\n\t\t\t'100%': { transform: 'rotate(360deg)' }\r\n\t\t},\r\n\t},\r\n\tspinner: {\r\n\t\twidth: '5em',\r\n\t\theight: '5em',\r\n\t\tborderTop: `0.4em solid ${white}`,\r\n\t\tborderRight: '0.4em solid transparent',\r\n\t\tborderRadius: '50%',\r\n\t\tanimation: 'spinner 0.6s linear infinite'\r\n\t},\r\n\tspinPadding: {\r\n\t\tpadding: '1em'\r\n\t}\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import useStyles from './Spinner.styles'\r\n\r\nconst Spinner: React.FC = () => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<div className={classes.spinPadding}>\r\n\t\t\t<div className={classes.spinner}>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Spinner\r\n","import { createUseStyles } from 'react-jss'\r\nimport { weightSemiBold } from '../../config/jss-vars'\r\n\r\nconst styles = {\r\n\tsection: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'flex-start',\r\n\t\tgap: '2em',\r\n\t\tmargin: '2em 0',\r\n\t},\r\n\ttext: {\r\n\t\tfontSize: '1.2em',\r\n\t\ttextTransform: 'uppercase',\r\n\t\tfontWeight: weightSemiBold,\r\n\t},\r\n\ttextSpecial: {\r\n\t\tfontSize: '1.5em',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import { BigNumber, ethers } from 'ethers'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport { ContractContext } from '../../context/Web3/ContractContext'\r\nimport { Web3Context } from '../../context/Web3/Web3Context'\r\nimport { formatEthers } from '../../utils/format'\r\nimport InfoPanel from '../InfoPanel/InfoPanel'\r\nimport Spinner from '../Spinner/Spinner'\r\nimport useStyles from './Balance.styles'\r\n\r\nconst Balance: React.FC = () => {\r\n\tconst { address, web3Provider } = useContext(Web3Context)\r\n\tconst { stakingContract, stakingContractId } = useContext(ContractContext)\r\n\r\n\tconst [balance, setBalance] = useState('0')\r\n\tconst [stakedNLBs, setStakedNLBs] = useState<BigNumber[]>([])\r\n\tconst [owed, setOwed] = useState('0')\r\n\tconst [isLoading, setIsLoading] = useState(true)\r\n\r\n\tconst classes = useStyles()\r\n\r\n\tconst getBalances = async () => {\r\n\t\tsetIsLoading(true)\r\n\r\n\t\tif (!stakingContract) {\r\n\t\t\tsetIsLoading(false)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tsetStakedNLBs(await stakingContract.listStakedTokensOfOwner(address))\r\n\t\tsetBalance(formatEthers(await stakingContract.balanceOf(address)))\r\n\r\n\t\tconst claimables: BigNumber[] = await stakingContract.listClaimableRewardsOfOwner(\r\n\t\t\taddress,\r\n\t\t)\r\n\t\tconst claimable: BigNumber = claimables.reduce(\r\n\t\t\t(next, curr) => curr.add(next),\r\n\t\t\tethers.constants.Zero,\r\n\t\t)\r\n\t\tsetOwed(formatEthers(claimable))\r\n\t\tsetIsLoading(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBalances()\r\n\t}, [stakingContract])\r\n\r\n\tconst claimTokens = async () => {\r\n\t\tsetIsLoading(true)\r\n\r\n\t\tif (!stakingContract) {\r\n\t\t\tsetIsLoading(false)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (!stakedNLBs || stakedNLBs.length === 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Claim tokens\r\n\t\ttry {\r\n\t\t\tconst tx = await stakingContract.claim(stakedNLBs)\r\n\t\t\tawait tx.wait()\r\n\t\t\tgetBalances()\r\n\t\t} catch (err) {\r\n\t\t\tif (err instanceof Error) {\r\n\t\t\t\ttoast.error(err.message)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetBalances()\r\n\t}\r\n\r\n\tconst addToMM = async () => {\r\n\t\tif (!stakingContractId || !web3Provider || !window.ethereum) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\twindow.ethereum.request({\r\n\t\t\tmethod: 'wallet_watchAsset',\r\n\t\t\tparams: {\r\n\t\t\t\ttype: 'ERC20',\r\n\t\t\t\toptions: {\r\n\t\t\t\t\taddress: stakingContractId,\r\n\t\t\t\t\tsymbol: 'CHOW',\r\n\t\t\t\t\tdecimals: 18,\r\n\t\t\t\t\timage: 'https://utility.nlbnft.com/img/chow.png',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t})\r\n\t}\r\n\r\n\tif (!stakingContract) {\r\n\t\treturn <></>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.section}>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<InfoPanel\r\n\t\t\t\t\t\ttitle=\"Your NFTs Staked\"\r\n\t\t\t\t\t\tcontent={`${stakedNLBs.length} NLB`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InfoPanel\r\n\t\t\t\t\t\ttitle=\"Claimable Tokens\"\r\n\t\t\t\t\t\tcontent={`${owed} $CHOW`}\r\n\t\t\t\t\t\tonClick={claimTokens}\r\n\t\t\t\t\t\tbuttonText=\"Claim Tokens\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InfoPanel\r\n\t\t\t\t\t\ttitle=\"Current Balance\"\r\n\t\t\t\t\t\tcontent={`${balance} $CHOW`}\r\n\t\t\t\t\t\tonClick={addToMM}\r\n\t\t\t\t\t\tbuttonText=\"Add to MM\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Balance\r\n","export const BREAK_POINT_EXTRA_SMALL = 320\r\nexport const BREAK_POINT_SMALL = 568\r\nexport const BREAK_POINT_MEDIUM = 768\r\nexport const BREAK_POINT_LARGE = 1200\r\nexport const BREAK_POINT_EXTRA_LARGE = 1440\r\n\r\nexport const min = (size: number): string => {\r\n\treturn `min-width: ${size}px`\r\n}\r\n\r\nexport const max = (size: number): string => {\r\n\treturn `max-width: ${size - 1}px`\r\n}\r\n\r\nexport const down = (size: number): string => {\r\n\treturn `@media (${max(size)})`\r\n}\r\n\r\nexport const up = (size: number): string => {\r\n\treturn `@media (${min(size)})`\r\n}\r\n\r\nexport const between = (lowerLimit: number, upperLimit: number): string => {\r\n\treturn `@media (${min(lowerLimit)}) and (${max(upperLimit)})`\r\n}\r\n\r\nexport const TABLET_DOWN = (): string => down(BREAK_POINT_MEDIUM)\r\nexport const MOBILE_DOWN = (): string => down(BREAK_POINT_SMALL)\r\n\r\nexport const TABLET_ONLY = (): string => between(BREAK_POINT_SMALL, BREAK_POINT_MEDIUM)\r\n\r\nexport const MOBILE_UP = (): string => up(BREAK_POINT_SMALL)\r\nexport const LAPTOP_UP = (): string => up(BREAK_POINT_MEDIUM)\r\nexport const SCREEN_UP = (): string => up(BREAK_POINT_LARGE)\r\nexport const LARGE_SCREEN_UP = (): string => up(BREAK_POINT_EXTRA_LARGE)\r\n","import WalletConnectProvider from '@walletconnect/web3-provider'\r\nimport { ethers } from 'ethers'\r\nimport { useContext, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport Web3Modal from 'web3modal'\r\nimport { infuraId, validChainIds } from '../../config/chain'\r\nimport { Web3Context } from '../../context/Web3/Web3Context'\r\nimport Spinner from '../Spinner/Spinner'\r\nimport Button from './Button'\r\n\r\nconst ConnectButton: React.FC = () => {\r\n\tconst { account, setAccount, setAddress, setWeb3Provider } = useContext(Web3Context)\r\n\tif (!setAccount || !setAddress || !setWeb3Provider) {\r\n\t\treturn <></>\r\n\t}\r\n\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\r\n\tconst getWeb3Modal = async () =>\r\n\t\tnew Web3Modal({\r\n\t\t\tnetwork: 'mainnet',\r\n\t\t\tcacheProvider: false,\r\n\t\t\tproviderOptions: {\r\n\t\t\t\twalletconnect: {\r\n\t\t\t\t\tpackage: WalletConnectProvider,\r\n\t\t\t\t\toptions: {\r\n\t\t\t\t\t\tinfuraId,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tdisableInjectedProvider: false,\r\n\t\t})\r\n\r\n\tconst connect = async () => {\r\n\t\tconst web3Modal = await getWeb3Modal()\r\n\t\tawait web3Modal.clearCachedProvider()\r\n\t\tconst connection = await web3Modal.connect()\r\n\r\n\t\tsetIsLoading(true)\r\n\r\n\t\tconst provider = new ethers.providers.Web3Provider(connection)\r\n\r\n\t\tif (!validChainIds.includes((await provider.getNetwork()).chainId)) {\r\n\t\t\ttoast.error(\r\n\t\t\t\t'Invalid network selected. Please switch to Mainnet',\r\n\t\t\t)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst accounts = await provider.listAccounts()\r\n\t\tconst addr = accounts[0]\r\n\t\tsetAddress(addr)\r\n\r\n\t\tlet name\r\n\t\ttry {\r\n\t\t\tname = await provider.lookupAddress(addr)\r\n\t\t} catch (err) {\r\n\t\t\t// This is fine\r\n\t\t\t// console.log(err)\r\n\t\t}\r\n\r\n\t\tif (name) {\r\n\t\t\tsetAccount(name)\r\n\t\t} else {\r\n\t\t\tsetAccount(\r\n\t\t\t\t`${addr.substring(0, 5)}...${addr.substring(\r\n\t\t\t\t\taddr.length - 4,\r\n\t\t\t\t\taddr.length,\r\n\t\t\t\t)}`,\r\n\t\t\t)\r\n\t\t}\r\n\t\tsetWeb3Provider(provider)\r\n\t\tsetIsLoading(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<Button onClick={connect} className=\"primaryBlack\">\r\n\t\t\t\t\t{account || 'Connect Wallet'}\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ConnectButton\r\n","import { createUseStyles } from 'react-jss'\r\n\r\nexport type ClassNames = 'default' | 'invert' | 'small' | 'large' | 'largeInverted'\r\n\r\nconst styles = {\r\n\tdefaultHeight: {\r\n\t\theight: '3em',\r\n\t},\r\n\tdefault: {\r\n\t\theight: '3em',\r\n\t\twidth: '3em',\r\n\t},\r\n\tinvert: {\r\n\t\tcomposes: '$default',\r\n\t\tfilter: 'invert(1)',\r\n\t},\r\n\tsmall: {\r\n\t\theight: '1em',\r\n\t\twidth: '1em',\r\n\t},\r\n\tlarge: {\r\n\t\theight: '5em',\r\n\t\twidth: '5em',\r\n\t},\r\n\tlargeInverted: {\r\n\t\tcomposes: ['$large', '$invert'],\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import useStyles, { ClassNames } from './Logo.styles'\r\n\r\nconst { PUBLIC_URL } = process.env\r\n\r\ninterface Props {\r\n\tclassName?: ClassNames;\r\n}\r\n\r\nconst NLBLogo: React.FC<Props> = ({className}) => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<img\r\n\t\t\tclassName={classes[className || 'default']}\r\n\t\t\tsrc={`${PUBLIC_URL}/img/logo_nlb.png`}\r\n\t\t\talt=\"NLB Logo\"\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default NLBLogo\r\n","import useStyles, { ClassNames } from './Logo.styles'\r\n\r\nconst { PUBLIC_URL } = process.env\r\n\r\ninterface Props {\r\n\tclassName?: ClassNames;\r\n}\r\n\r\nconst EtherscanLogo: React.FC<Props> = ({className}) => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<img\r\n\t\t\tclassName={classes[className || 'default']}\r\n\t\t\tsrc={`${PUBLIC_URL}/img/logo_etherscan.webp`}\r\n\t\t\talt=\"Etherscan Logo\"\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default EtherscanLogo\r\n","import useStyles, { ClassNames } from './Logo.styles'\r\n\r\nconst { PUBLIC_URL } = process.env\r\n\r\ninterface Props {\r\n\tclassName?: ClassNames;\r\n}\r\n\r\nconst OpenseaLogo: React.FC<Props> = ({className}) => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<img\r\n\t\t\tclassName={classes[className || 'default']}\r\n\t\t\tsrc={`${PUBLIC_URL}/img/logo_opensea.svg`}\r\n\t\t\talt=\"Opensea Logo\"\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default OpenseaLogo\r\n","import { createUseStyles } from 'react-jss'\r\nimport { black, white } from '../../config/colors'\r\nimport { weightSemiBold } from '../../config/jss-vars'\r\n\r\nexport type ClassNames = 'default' | 'square'\r\n\r\nconst styles = {\r\n\tdefault: {\r\n\t\tcolor: white,\r\n\t\tmargin: '0 0.25em',\r\n\t\tfontSize: '1.5em',\r\n\t\tfontWeight: weightSemiBold,\r\n\t},\r\n\tsquare: {\r\n\t\tcomposes: '$default',\r\n\t\tbackgroundColor: black,\r\n\t\tborderRadius: '5px',\r\n\t\tpadding: '0.2em 0.4em',\r\n\t},\r\n\tmargin: {\r\n\t\tmarginTop: '0.4em',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n\tfaDiscord,\r\n\tfaInstagram,\r\n\tfaTwitter,\r\n} from '@fortawesome/free-brands-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { getNlbContractId, getStakingContractId } from '../../config/chain'\r\nimport EtherscanLogo from '../Logo/EtherscanLogo'\r\nimport OpenseaLogo from '../Logo/OpenseaLogo'\r\nimport useStyles, { ClassNames } from './SocialLink.styles'\r\n\r\ninterface Props {\r\n\tclassName?: ClassNames\r\n}\r\ninterface EtherscanProps extends Props {\r\n\tcontract: 'NLB' | 'Staking'\r\n\tchainId?: number\r\n}\r\n\r\nconst makeLogoLink = (\r\n\tlink: string,\r\n\tlogo: JSX.Element,\r\n\tclassName?: ClassNames,\r\n) => {\r\n\tconst classes = useStyles()\r\n\treturn (\r\n\t\t<a href={link} className={classes[className || 'default']}>\r\n\t\t\t{logo}\r\n\t\t</a>\r\n\t)\r\n}\r\n\r\nconst makeFALink = (link: string, icon: IconProp, className?: ClassNames) => {\r\n\treturn makeLogoLink(link, <FontAwesomeIcon icon={icon} />, className)\r\n}\r\n\r\nexport const TwitterLink: React.FC<Props> = ({ className }) => {\r\n\treturn makeFALink('https://twitter.com/9livesbattalion', faTwitter, className)\r\n}\r\nexport const InstagramLink: React.FC<Props> = ({ className }) => {\r\n\treturn makeFALink(\r\n\t\t'https://www.instagram.com/9livesbattalion',\r\n\t\tfaInstagram,\r\n\t\tclassName,\r\n\t)\r\n}\r\nexport const DiscordLink: React.FC<Props> = ({ className }) => {\r\n\treturn makeFALink('https://discord.gg/nlbnft', faDiscord, className)\r\n}\r\n\r\nexport const OpenseaLink: React.FC<Props> = ({ className }) => {\r\n\tconst classes = useStyles()\r\n\treturn makeLogoLink(\r\n\t\t'https://opensea.io/collection/nlbnft',\r\n\t\t<div className={classes.margin}>\r\n\t\t\t<OpenseaLogo className=\"small\" />\r\n\t\t</div>,\r\n\t\tclassName,\r\n\t)\r\n}\r\nexport const EtherscanLink: React.FC<EtherscanProps> = ({\r\n\tclassName,\r\n\tcontract,\r\n\tchainId,\r\n}) => {\r\n\tconst classes = useStyles()\r\n\tconst contractId =\r\n\t\tcontract === 'NLB'\r\n\t\t\t? getNlbContractId(chainId || 1)\r\n\t\t\t: getStakingContractId(chainId || 1)\r\n\treturn makeLogoLink(\r\n\t\t`https://etherscan.io/address/${contractId}`,\r\n\t\t<div className={classes.margin}>\r\n\t\t\t<EtherscanLogo className=\"small\" />\r\n\t\t</div>,\r\n\t\tclassName,\r\n\t)\r\n}\r\n\r\nexport const SocialLinks: React.FC<EtherscanProps> = ({\r\n\tclassName,\r\n\tcontract,\r\n\tchainId,\r\n}) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TwitterLink className={className} />\r\n\t\t\t<DiscordLink className={className} />\r\n\t\t\t<InstagramLink className={className} />\r\n\t\t\t<OpenseaLink className={className} />\r\n\t\t\t<EtherscanLink\r\n\t\t\t\tclassName={className}\r\n\t\t\t\tcontract={contract}\r\n\t\t\t\tchainId={chainId}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n","import { createUseStyles } from 'react-jss'\r\nimport { off_grey, white } from '../../config/colors'\r\nimport { weightMedium } from '../../config/jss-vars'\r\n\r\nconst HEADER_HEIGHT = '64px'\r\n\r\nconst styles = {\r\n\tspacer: {\r\n\t\tmarginBottom: `calc(${HEADER_HEIGHT} * 2)`,\r\n\t},\r\n\theader: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'center',\r\n\t\tbackgroundColor: off_grey,\r\n\t\tbackdropFilter: 'blur(8px)',\r\n\t\tboxShadow: 'black 0px 2px 16px',\r\n\t\theight: HEADER_HEIGHT,\r\n\t\tminHeight: HEADER_HEIGHT,\r\n\t\tmaxHeight: HEADER_HEIGHT,\r\n\t\tboxSizing: 'border-box',\r\n\t\tposition: 'fixed',\r\n\t\tpadding: '8px 48px',\r\n\t},\r\n\tinner: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'space-evenly',\r\n\t\talignItems: 'center',\r\n\t\tmargin: 'auto',\r\n\t},\r\n\tgroup: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tgap: '1em',\r\n\t},\r\n\tgroupClose: {\r\n\t\tcomposes: '$group',\r\n\t\tgap: '0.5em',\r\n\t},\r\n\tlink: {\r\n\t\tcolor: white,\r\n\t\tfontWeight: weightMedium,\r\n\t\tlineHeight: 1.75,\r\n\t\tletterSpacing: '0.02857em',\r\n\t\tfontSize: '1.25em',\r\n\t\topacity: 0.9,\r\n\t\ttextDecoration: 'none',\r\n\t\t'&:hover': {\r\n\t\t\tborderBottom: `2px solid ${white}`,\r\n\t\t},\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MediaQuery from 'react-responsive'\r\nimport { BREAK_POINT_LARGE, BREAK_POINT_MEDIUM, BREAK_POINT_SMALL, min } from '../../config/mediaQueryHelper'\r\nimport { Web3Context } from '../../context/Web3/Web3Context'\r\nimport { HomeRoute } from '../../pages/routes'\r\nimport ConnectButton from '../Button/ConnectButton'\r\nimport Logo from '../Logo/NLBLogo'\r\nimport { SocialLinks } from '../SocialLink/SocialLink'\r\nimport useStyles from './Header.styles'\r\n\r\nconst Header: React.FC = () => {\r\n\tconst classes = useStyles()\r\n\tconst { web3Provider } = useContext(Web3Context)\r\n\r\n\tconst chainId = web3Provider?.network.chainId\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header className={classes.header}>\r\n\t\t\t\t<div className={classes.inner}>\r\n\t\t\t\t\t<div className={classes.group}>\r\n\t\t\t\t\t\t<Link to={HomeRoute.path}>\r\n\t\t\t\t\t\t\t<Logo />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.group}>\r\n\t\t\t\t\t\t<MediaQuery query={`(${min(BREAK_POINT_LARGE)})`}>\r\n\t\t\t\t\t\t\t<a href=\"https://nlbnft.com/#story\" className={classes.link}>Story</a>\r\n\t\t\t\t\t\t\t<a href=\"https://nlbnft.com/#project\" className={classes.link}>Project</a>\r\n\t\t\t\t\t\t\t<a href=\"https://nlbnft.com/#gallery\" className={classes.link}>Gallery</a>\r\n\t\t\t\t\t\t\t<a href=\"https://nlbnft.com/#faq\" className={classes.link}>FAQ</a>\r\n\t\t\t\t\t\t\t<a href=\"https://nlbnft.com/#roadmap\" className={classes.link}>Roadmap</a>\r\n\t\t\t\t\t\t\t<a href=\"https://nlbnft.com/#team\" className={classes.link}>Team</a>\r\n\t\t\t\t\t\t</MediaQuery>\r\n\t\t\t\t\t\t<MediaQuery query={`(${min(BREAK_POINT_SMALL)})`}>\r\n\t\t\t\t\t\t\t<a href=\"https://nlbnft.com/#mint\" className={classes.link}>Mint</a>\r\n\t\t\t\t\t\t</MediaQuery>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.groupClose}>\r\n\t\t\t\t\t\t<ConnectButton />\r\n\t\t\t\t\t\t<MediaQuery query={`(${min(BREAK_POINT_MEDIUM)})`}>\r\n\t\t\t\t\t\t\t<SocialLinks contract='Staking' chainId={chainId} />\r\n\t\t\t\t\t\t</MediaQuery>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t\t<div className={classes.spacer}></div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import useStyles, { ClassNames } from './Logo.styles'\r\n\r\nconst { PUBLIC_URL } = process.env\r\n\r\ninterface Props {\r\n\tclassName?: ClassNames;\r\n}\r\n\r\nconst AoLogo: React.FC<Props> = ({className}) => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<img\r\n\t\t\tclassName={classes[className || 'default']}\r\n\t\t\tsrc={`${PUBLIC_URL}/img/logo_ao.png`}\r\n\t\t\talt=\"Ao Logo\"\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default AoLogo\r\n","import { createUseStyles } from 'react-jss'\r\nimport { black } from '../../config/colors'\r\n\r\nconst styles = {\r\n\tfooter: {\r\n\t\tbackground: black,\r\n\t\tmarginTop: '2em',\r\n\t},\r\n\tbanner: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '2em 5em',\r\n\t\tbackground: 'transparent linear-gradient(264deg, #6861FE 0%, #0C99FD 43%, #00A7FF 78%, #860FED 100%) 0% 0% no-repeat padding-box',\r\n\t},\r\n\tinner: {\r\n\t\tdisplay: 'grid',\r\n\t\tgridTemplateColumns: 'repeat(3, 1fr)',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '1em',\r\n\t},\r\n\tcenter: {\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tright: {\r\n\t\ttextAlign: 'right',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import Button from '../Button/Button'\r\nimport AoLogo from '../Logo/AoLogo'\r\nimport Text from '../Text/Text'\r\nimport useStyles from './Footer.styles'\r\n\r\nconst Footer: React.FC = () => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<footer className={classes.footer}>\r\n\t\t\t<div className={classes.banner}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Text variant='h2'>Need to recruit your battalion?</Text>\r\n\t\t\t\t\t<Text variant='body'>Purchase more Nine Lives Battalion NFTS on Opensea and build up your Battalion!</Text>\r\n\t\t\t\t</div>\r\n\t\t\t\t<a href='https://opensea.io/collection/nlbnft'>\r\n\t\t\t\t\t<Button onClick={() => {return true}} className='primaryInverted'>Buy on Opensea</Button>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.inner}>\r\n\t\t\t\t<Text variant='small'>A Dystopia Productions Project</Text>\r\n\t\t\t\t<div className={classes.center}>\r\n\t\t\t\t\t<Text variant='small'>© All Rights Reserved 2022</Text>\r\n\t\t\t\t</div>\r\n\t\t\t\t<a href='https://block.aocollab.tech' className={classes.right}>\r\n\t\t\t\t\t<AoLogo />\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\nexport default Footer\r\n","import { createUseStyles } from 'react-jss'\r\nimport { white } from '../../config/colors'\r\nimport { standardFontFamily } from '../../config/jss-vars'\r\n\r\nexport type ClassNames = 'default'\r\n\r\nconst styles = {\r\n\tdefault: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tminHeight: '100vh',\r\n\t\tbackground: 'url(\"/img/background_tree1.png\")',\r\n\t\tbackgroundSize: 'cover',\r\n\t\tbackgroundPosition: 'bottom',\r\n\t},\r\n\tmain: {\r\n\t\tflex: 1,\r\n\t\t'& > *': {\r\n\t\t\tfontFamily: standardFontFamily,\r\n\t\t\tcolor: white,\r\n\t\t}\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import Footer from '../Footer/Footer'\r\nimport Header from '../Header/Header'\r\nimport useStyles, { ClassNames } from './PageWrapper.styles'\r\n\r\ninterface Props {\r\n\tclassName?: ClassNames\r\n\tchildren?: React.ReactNode\r\n\thasHeader?: boolean\r\n\thasFooter?: boolean\r\n}\r\n\r\nconst PageWrapper: React.FC<Props> = ({\r\n\tchildren,\r\n\tclassName = 'default',\r\n\thasHeader = true,\r\n\thasFooter = true,\r\n}) => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<div className={classes[className]}>\r\n\t\t\t{hasHeader && <Header />}\r\n\t\t\t<main className={classes.main}>\r\n\t\t\t\t{children}\r\n\t\t\t</main>\r\n\t\t\t{hasFooter && <Footer />}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PageWrapper\r\n","import { toast } from 'react-toastify'\r\n\r\nconst doFetch = async (\r\n\tpath: string,\r\n\tmethod: string,\r\n\t// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n\tbody?: any, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n): Promise<any> => {\r\n\tlet didToast = false\r\n\ttry {\r\n\t\tconst res = await fetch(path, {\r\n\t\t\tmethod: method,\r\n\t\t\tbody: body && JSON.stringify(body),\r\n\t\t\tcredentials: 'omit',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': method !== 'GET' ? 'application/json' : 'text/plain',\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t},\r\n\t\t})\r\n\t\tif (!res.ok) {\r\n\t\t\tconst msg = `Server error: ${res.status}`\r\n\t\t\ttoast.error(msg)\r\n\t\t\tdidToast = true\r\n\t\t\tconsole.error(msg)\r\n\t\t\tthrow Error(msg)\r\n\t\t}\r\n\t\treturn await res.json()\r\n\t} catch (err) {\r\n\t\tif (!didToast) {\r\n\t\t\tconsole.error(err)\r\n\t\t\ttoast.error('Error contacting server')\r\n\t\t}\r\n\t\tthrow err\r\n\t}\r\n\treturn\r\n}\r\n\r\nexport default doFetch\r\n","import { createUseStyles } from 'react-jss'\r\nimport { off_white, black, purple } from '../../config/colors'\r\nimport { weightRegular, weightSemiBold } from '../../config/jss-vars'\r\n\r\nconst styles = {\r\n\tcard: {\r\n\t\tpadding: '1em',\r\n\t\tmargin: '1em',\r\n\t\tbackgroundColor: off_white,\r\n\t\tborderRadius: '20px',\r\n\t\tcursor: 'pointer',\r\n\t\tcolor: black,\r\n\t},\r\n\tselectedCard: {\r\n\t\tcomposes: '$card',\r\n\t\tbackgroundColor: purple,\r\n\t},\r\n\timage: {\r\n\t\tmaxWidth: '200px',\r\n\t\tborderRadius: '6px',\r\n\t},\r\n\tcaption: {\r\n\t\ttextAlign: 'right',\r\n\t\tfontWeight: weightSemiBold,\r\n\t},\r\n\tsmall: {\r\n\t\tfontWeight: weightRegular,\r\n\t}\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import { NFTMetadata } from '../../interface/nftMetadata'\r\n\r\nimport useStyles from './NFTCard.styles'\r\n\r\ninterface Props {\r\n\tnft: NFTMetadata\r\n\tselected: boolean\r\n\tonClick: (name: string) => void\r\n}\r\n\r\nconst NFTCard: React.FC<Props> = ({ nft, selected, onClick }) => {\r\n\tconst classes = useStyles()\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={selected ? classes.selectedCard : classes.card}\r\n\t\t\tonClick={() => onClick(nft.name)}\r\n\t\t>\r\n\t\t\t{nft.image.slice(-1) === '4' ? (\r\n\t\t\t\t<video className={classes.image} src={nft.image} loop={true} autoPlay={true} />\r\n\t\t\t) : (\r\n\t\t\t\t<img className={classes.image} src={nft.image} />\r\n\t\t\t)}\r\n\t\t\t<p className={classes.caption}>{nft.name}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NFTCard\r\n","import { createUseStyles } from 'react-jss'\r\nimport { light_blue, text_shadow, white } from '../../config/colors'\r\nimport { headingLetterSpacing, standardFontFamily } from '../../config/jss-vars'\r\n\r\nconst styles = {\r\n\tsectionContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\twidth: '100%',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tmaxWidth: '60em',\r\n\t},\r\n\tsection: {\r\n\t\tmarginBottom: '2em',\r\n\t},\r\n\ttitleSection: {\r\n\t\tmarginBottom: '3em',\r\n\t},\r\n\ttitle: {\r\n\t\tfontFamily: standardFontFamily,\r\n\t\tletterSpacing: headingLetterSpacing,\r\n\t\tfontSize: '3em',\r\n\t\tcolor: light_blue,\r\n\t\ttextShadow: `-5px -1px 0px ${text_shadow}`,\r\n\t\tmargin: 0,\r\n\t\tmarginBottom: '1em',\r\n\t\ttextTransform: 'uppercase',\r\n\t},\r\n\theading: {\r\n\t\tfontFamily: standardFontFamily,\r\n\t\tletterSpacing: headingLetterSpacing,\r\n\t\tfontSize: '2em',\r\n\t\tmargin: 0,\r\n\t\ttextTransform: 'uppercase',\r\n\t},\r\n\ttext: {\r\n\t\tcomposes: '$title',\r\n\t\tfontSize: '1em',\r\n\t\tcolor: white,\r\n\t\tmarginBottom: '1em',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import { BigNumber, ethers } from 'ethers'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport { ContractContext } from '../../context/Web3/ContractContext'\r\nimport { Web3Context } from '../../context/Web3/Web3Context'\r\nimport { NFTMetadata } from '../../interface/nftMetadata'\r\nimport doFetch from '../../utils/doFetch'\r\nimport Button from '../Button/Button'\r\nimport Spinner from '../Spinner/Spinner'\r\nimport Text from '../Text/Text'\r\nimport NFTCard from './NFTCard'\r\nimport useStyles from './Staking.styles'\r\n\r\ninterface NFTSelected extends NFTMetadata {\r\n\ttokenId: BigNumber\r\n\tselected: boolean\r\n}\r\n\r\nconst Staking: React.FC = () => {\r\n\tconst [unstaked, setUnstaked] = useState<NFTSelected[]>([])\r\n\tconst [staked, setStaked] = useState<NFTSelected[]>([])\r\n\tconst [isLoading, setIsLoading] = useState(true)\r\n\tconst [isApproved, setIsApproved] = useState(false)\r\n\tconst [txPending, setTxPending] = useState(false)\r\n\tconst [forceRefresh, setForceRefresh] = useState(true) // Toggle this state to force a refresh\r\n\r\n\tconst { address } = useContext(Web3Context)\r\n\tconst { stakingContract, stakingContractId, nlbContract } = useContext(\r\n\t\tContractContext,\r\n\t)\r\n\r\n\tconst classes = useStyles()\r\n\r\n\tuseEffect(() => {\r\n\t\tgetNLBs()\r\n\t}, [stakingContract, nlbContract])\r\n\r\n\tconst getNLBs = async () => {\r\n\t\tsetIsLoading(true)\r\n\r\n\t\tif (!nlbContract) {\r\n\t\t\tsetIsLoading(false)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst unstakedNLBs = await nlbContract.walletOfOwner(address)\r\n\t\tlet stakedNLBs: BigNumber[] = []\r\n\t\tif (stakingContract) {\r\n\t\t\tstakedNLBs = await stakingContract.listStakedTokensOfOwner(address)\r\n\t\t}\r\n\r\n\t\tconst stakedNLBData: NFTSelected[] = []\r\n\t\tconst unstakedNLBData: NFTSelected[] = []\r\n\r\n\t\tconst basePath = await nlbContract.baseURI()\r\n\r\n\t\tlet metadataPromises: Promise<NFTSelected>[] = []\r\n\r\n\t\tconst cleanMetadata = (metadata: NFTSelected, tokenId: BigNumber) => {\r\n\t\t\tmetadata.tokenId = tokenId\r\n\t\t\tmetadata.selected = false\r\n\t\t\tmetadata.name = metadata.name || `NLB #${tokenId.toNumber()}`\r\n\t\t\tmetadata.image = metadata.image.replace(\r\n\t\t\t\t'ipfs://',\r\n\t\t\t\t'https://ipfs.io/ipfs/',\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t// Get staked metadata\r\n\t\tfor (let i = 0; i < stakedNLBs.length; i++) {\r\n\t\t\tmetadataPromises.push(\r\n\t\t\t\tdoFetch(`${basePath}${stakedNLBs[i].toNumber()}.json`, 'GET'),\r\n\t\t\t)\r\n\t\t}\r\n\t\tawait Promise.all(metadataPromises)\r\n\t\tfor (let i = 0; i < stakedNLBs.length; i++) {\r\n\t\t\tconst metadata: NFTSelected = await metadataPromises[i]\r\n\t\t\tcleanMetadata(metadata, stakedNLBs[i])\r\n\t\t\tstakedNLBData.push(metadata)\r\n\t\t}\r\n\r\n\t\t// Get unstaked metadata\r\n\t\tmetadataPromises = []\r\n\t\tfor (let i = 0; i < unstakedNLBs.length; i++) {\r\n\t\t\tmetadataPromises.push(\r\n\t\t\t\tdoFetch(`${basePath}${unstakedNLBs[i].toNumber()}.json`, 'GET'),\r\n\t\t\t)\r\n\t\t}\r\n\t\tawait Promise.all(metadataPromises)\r\n\t\tfor (let i = 0; i < unstakedNLBs.length; i++) {\r\n\t\t\tconst metadata = await metadataPromises[i]\r\n\t\t\tcleanMetadata(metadata, unstakedNLBs[i])\r\n\t\t\tunstakedNLBData.push(metadata)\r\n\t\t}\r\n\r\n\t\tsetStaked(stakedNLBData)\r\n\t\tsetUnstaked(unstakedNLBData)\r\n\r\n\t\t// Check approved status\r\n\t\tsetIsApproved(\r\n\t\t\tawait nlbContract.isApprovedForAll(address, stakingContractId || ethers.constants.AddressZero),\r\n\t\t)\r\n\r\n\t\tsetIsLoading(false)\r\n\t}\r\n\r\n\tconst updateSelected = (name: string) => {\r\n\t\tlet nlb = staked.find(h => h.name === name)\r\n\t\tif (nlb) {\r\n\t\t\tnlb.selected = !nlb.selected\r\n\t\t\tsetStaked(staked)\r\n\t\t} else {\r\n\t\t\tnlb = unstaked.find(h => h.name === name)\r\n\t\t\tif (nlb) {\r\n\t\t\t\tnlb.selected = !nlb.selected\r\n\t\t\t\tsetUnstaked(unstaked)\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetForceRefresh(!forceRefresh)\r\n\t}\r\n\r\n\tconst doApproval = async () => {\r\n\t\tif (isApproved) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst tx = await nlbContract?.setApprovalForAll(stakingContractId, true)\r\n\t\t\tsetTxPending(true)\r\n\t\t\tawait tx.wait()\r\n\t\t\tsetIsApproved(true)\r\n\t\t\tsetTxPending(false)\r\n\t\t} catch (err) {\r\n\t\t\tif (err instanceof Error) {\r\n\t\t\t\ttoast.error(err.message)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst doStake = async () => {\r\n\t\tif (!isApproved) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst selected = unstaked.filter(h => h.selected).map(h => h.tokenId)\r\n\t\tif (!selected.length) {\r\n\t\t\twindow.alert('Please select NLBs to stake')\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst tx = await stakingContract?.stake(selected)\r\n\t\t\tsetTxPending(true)\r\n\t\t\tawait tx.wait()\r\n\t\t\tsetTxPending(false)\r\n\t\t\tgetNLBs()\r\n\t\t} catch (err) {\r\n\t\t\tif (err instanceof Error) {\r\n\t\t\t\ttoast.error(err.message)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst doUnstake = async () => {\r\n\t\tconst selected = staked.filter(h => h.selected).map(h => h.tokenId)\r\n\t\tif (!selected.length) {\r\n\t\t\twindow.alert('Please select NLBs to unstake')\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst tx = await stakingContract?.unstake(selected)\r\n\t\t\tsetTxPending(true)\r\n\t\t\tawait tx.wait()\r\n\t\t\tsetTxPending(false)\r\n\t\t\tgetNLBs()\r\n\t\t} catch (err) {\r\n\t\t\tif (err instanceof Error) {\r\n\t\t\t\ttoast.error(err.message)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst hasStakeSelected = !!staked.find(h => h.selected)\r\n\tconst hasUnstakeSelected = !!unstaked.find(h => h.selected)\r\n\r\n\tif (!nlbContract) {\r\n\t\treturn <></>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.sectionContainer}>\r\n\t\t\t<div>\r\n\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) : staked.length === 0 && unstaked.length === 0 ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Text variant='h2'>You don't have any NLBs</Text>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={classes.section}>\r\n\t\t\t\t\t\t<Text variant='h2'>Staked NFTs</Text>\r\n\t\t\t\t\t\t{staked.length > 0 ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t\t\t\t\t{staked.map(nlb => (\r\n\t\t\t\t\t\t\t\t\t\t<NFTCard\r\n\t\t\t\t\t\t\t\t\t\t\tkey={nlb.name}\r\n\t\t\t\t\t\t\t\t\t\t\tnft={nlb}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={nlb.selected}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={updateSelected}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{hasStakeSelected && (\r\n\t\t\t\t\t\t\t\t\t<Button onClick={doUnstake} disabled={txPending} className='primaryInverted'>\r\n\t\t\t\t\t\t\t\t\t\t{txPending ? 'Tx Pending...' : 'Unstake'}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Text variant='body'>No NLBs staked</Text>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{!isLoading && unstaked.length > 0 && (\r\n\t\t\t\t<div className={classes.section}>\r\n\t\t\t\t\t<Text variant='h2'>Unstaked NFTs</Text>\r\n\t\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t\t{unstaked.map(nlb => (\r\n\t\t\t\t\t\t\t<NFTCard\r\n\t\t\t\t\t\t\t\tkey={nlb.name}\r\n\t\t\t\t\t\t\t\tnft={nlb}\r\n\t\t\t\t\t\t\t\tselected={nlb.selected}\r\n\t\t\t\t\t\t\t\tonClick={updateSelected}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{stakingContract &&\r\n\t\t\t\t\t\tisApproved ? (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={doStake}\r\n\t\t\t\t\t\t\t\tdisabled={txPending || !hasUnstakeSelected}\r\n\t\t\t\t\t\t\t\tclassName='primaryInverted'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{txPending ? 'Tx Pending...' : 'Stake'}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={doApproval}\r\n\t\t\t\t\t\t\t\tdisabled={txPending || !hasUnstakeSelected}\r\n\t\t\t\t\t\t\t\tclassName='primaryInverted'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{txPending ? 'Tx Pending...' : 'Approve'}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Staking\r\n","import { createUseStyles } from 'react-jss'\r\nimport { headingLetterSpacing, standardFontFamily } from '../../config/jss-vars'\r\n\r\nconst fadedBlackHeight = 10\r\n\r\nconst styles = {\r\n\tpage: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\ttitleSection: {\r\n\t\tbackground: 'url(\"/img/background_mountains.jpg\")',\r\n\t\tbackgroundSize: 'cover',\r\n\t\tbackgroundPosition: 'bottom',\r\n\t\tbackgroundRepeat: 'no-repeat',\r\n\t\ttextAlign: 'center',\r\n\t\tmarginBottom: `${fadedBlackHeight/2 + 2}em`,\r\n\t\twidth: '100%',\r\n\t},\r\n\theading: {\r\n\t\tfontFamily: standardFontFamily,\r\n\t\tletterSpacing: headingLetterSpacing,\r\n\t\ttextTransform: 'uppercase',\r\n\t},\r\n\tfadedBlack: {\r\n\t\theight: `${fadedBlackHeight}em`,\r\n\t\tmarginBottom: `-${fadedBlackHeight/2}em`,\r\n\t\tbackgroundImage: 'linear-gradient(to bottom, rgba(0,0,0,0.0) 0%, rgba(0,0,0,1.0) 50%, rgba(0,0,0,0.0) 100%)',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import Balance from '../../components/Balance/Balance'\r\nimport Header from '../../components/Header/Header'\r\nimport PageWrapper from '../../components/PageWrapper/PageWrapper'\r\nimport Staking from '../../components/Staking/Staking'\r\nimport Text from '../../components/Text/Text'\r\nimport useStyles from './Profile.styles'\r\n\r\nconst Profile: React.FC = () => {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<PageWrapper hasHeader={false}>\r\n\t\t\t<div className={classes.page}>\r\n\t\t\t\t<div className={classes.titleSection}>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Text variant=\"h1\">Stake your Battalion!</Text>\r\n\t\t\t\t\t<Text variant=\"body-blue\">\r\n\t\t\t\t\t\tEarn $CHOW by staking your Nine lives battalion NFTs.\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t\t<Text variant=\"body-blue\">\r\n\t\t\t\t\t\tEach NLB token will earn you $CHOW over time.\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\tUse your $chow tokens to unlock benefits and features only\r\n\t\t\t\t\t\taccessible by using $CHOW.\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t\t<Balance />\r\n\t\t\t\t\t<div className={classes.fadedBlack}></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Staking />\r\n\t\t\t</div>\r\n\t\t</PageWrapper>\r\n\t)\r\n}\r\n\r\nexport default Profile\r\n","import { createUseStyles } from 'react-jss'\r\n\r\nconst styles = {\r\n\tpage: {\r\n\t\tminHeight: '100vh',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\tbackground: 'url(\"/img/background_tree1.png\")',\r\n\t\tbackgroundSize: 'cover',\r\n\t\tbackgroundPosition: 'bottom',\r\n\t},\r\n}\r\n\r\nexport default createUseStyles(styles)\r\n","import ConnectButton from '../../components/Button/ConnectButton'\r\nimport PageWrapper from '../../components/PageWrapper/PageWrapper'\r\nimport useStyles from './ConnectWallet.styles'\r\n\r\nconst ConnectWallet: React.FC = () => {\r\n\tconst classes = useStyles()\r\n\treturn (\r\n\t\t<PageWrapper hasHeader={false} hasFooter={false}>\r\n\t\t\t<div className={classes.page}>\r\n\t\t\t\t<ConnectButton />\r\n\t\t\t</div>\r\n\t\t</PageWrapper>\r\n\t)\r\n}\r\n\r\nexport default ConnectWallet\r\n","import { HashRouter, Navigate, Route, Routes } from 'react-router-dom'\r\nimport { ProfileRoute } from './routes'\r\nimport Profile from './Profile/Profile'\r\nimport { useContext } from 'react'\r\nimport { Web3Context } from '../context/Web3/Web3Context'\r\nimport ConnectWallet from './ConnectWallet/ConnectWallet'\r\n\r\nconst Router: React.FC = () => {\r\n\tconst { web3Provider } = useContext(Web3Context)\r\n\r\n\tif (!web3Provider) {\r\n\t\t// Require wallet connection\r\n\t\treturn (<ConnectWallet />)\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t{/* <Route path={HomeRoute.path} element={<Home />} /> */}\r\n\t\t\t\t\t<Route path={ProfileRoute.path} element={<Profile />} />\r\n\t\t\t\t\t<Route path=\"*\" element={<Navigate to={ProfileRoute.path} />} />\r\n\t\t\t\t</Routes>\r\n\t\t\t</HashRouter>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Router\r\n","import { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport ContractContextProvider from './context/Web3/ContractContext'\r\nimport Web3ContextProvider from './context/Web3/Web3Context'\r\nimport Router from './pages/Router'\r\n\r\nconst App: React.FC = () => {\r\n\treturn (\r\n\t\t<Web3ContextProvider>\r\n\t\t\t<ContractContextProvider>\r\n\t\t\t\t<Router />\r\n\t\t\t\t<ToastContainer\r\n\t\t\t\t\ttheme='dark'\r\n\t\t\t\t\tposition='top-center'\r\n\t\t\t\t\tautoClose={5000}\r\n\t\t\t\t\tpauseOnFocusLoss={false}\r\n\t\t\t\t\tdraggable={false}\r\n\t\t\t\t/>\r\n\t\t\t</ContractContextProvider>\r\n\t\t</Web3ContextProvider>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry)\r\n\t\t\tgetFID(onPerfEntry)\r\n\t\t\tgetFCP(onPerfEntry)\r\n\t\t\tgetLCP(onPerfEntry)\r\n\t\t\tgetTTFB(onPerfEntry)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement)\nroot.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}